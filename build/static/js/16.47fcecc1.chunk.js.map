{"version":3,"sources":["../node_modules/react-motion/lib/stripStyle.js","../node_modules/react-motion-drawer/drawer.js","../node_modules/react-motion/lib/mapToZero.js","../node_modules/react-motion/lib/stepper.js","../node_modules/react-motion/node_modules/performance-now/lib/performance-now.js","../node_modules/react-motion/lib/shouldStopAnimation.js","../node_modules/react-motion/lib/presets.js","../node_modules/react-motion/lib/react-motion.js","../node_modules/react-motion/lib/Motion.js","../node_modules/react-motion/lib/StaggeredMotion.js","../node_modules/react-motion/lib/TransitionMotion.js","../node_modules/react-motion/lib/mergeDiff.js","../node_modules/react-motion/lib/spring.js","../node_modules/react-motion/lib/reorderKeys.js","../node_modules/react-hammerjs/dist/react-hammerjs.es.js","../node_modules/hammerjs/hammer.js","../node_modules/1-liners/isFunction.js","../node_modules/react-motion-drawer/styles.js"],"names":["exports","__esModule","style","ret","key","Object","prototype","hasOwnProperty","call","val","module","defineProperty","value","_extends","assign","target","i","arguments","length","source","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","__webpack_require__","_propTypes2","_reactMotion","_reactHammerjs2","_isFunction2","_styles3","obj","default","_possibleConstructorReturn","self","ReferenceError","bool","number","object","array","string","func","oneOfType","Drawer","_React$Component","_ref","_temp","_this","instance","TypeError","_classCallCheck","this","_len","args","Array","_key","__proto__","getPrototypeOf","apply","concat","state","currentState","isState","s","isClosed","isOpen","isOpening","isClosing","onPress","e","noTouchOpen","preventDefault","peak","onPressUp","noTouchClose","close","onPan","isFinal","pointers","direction","deltaX","inPanTolerance","open","_this$props","right","peakingWidth","width","handleWidth","calculateWidth","clientX","x","document","body","clientWidth","closingOrOpening","nextState","PEAK","IS_OPENING","IS_CLOSING","OPEN","CLOSED","setState","onOverlayTap","test","match","subClass","superClass","create","constructor","setPrototypeOf","_inherits","Component","nextProps","nextOpen","_props","onChange","_props2","isClosingDirection","panTolerance","Math","abs","_this2","_props3","config","drawerStyle","className","overlayClassName","children","offset","_state","createElement","Motion","myProp","spring","min","interpolated","_styles","drawer","transform","overlay","computedStyle","display","DIRECTION_HORIZONTAL","onTap","propTypes","zIndex","shape","stiffness","damping","precision","height","overlayColor","fadeOut","defaultProps","secondPerFrame","v","destX","k","b","newV","newX","reusedTuple","process","getNanoSeconds","hrtime","loadTime","performance","now","hr","Date","getTime","currentStyle","currentVelocity","styleValue","noWobble","gentle","wobbly","stiff","_interopRequire","_Motion","_StaggeredMotion","StaggeredMotion","_TransitionMotion","TransitionMotion","_spring","_presets","presets","_stripStyle","stripStyle","_reorderKeys","reorderKeys","_mapToZero2","_stripStyle2","_stepper4","_performanceNow2","_raf2","_shouldStopAnimation2","msPerFrame","wasAnimating","animationID","prevTime","accumulatedTime","unreadPropStyle","clearUnreadPropStyle","destStyle","dirty","lastIdealStyle","lastIdealVelocity","startAnimationIfNecessary","timestamp","propsStyle","onRest","currentTime","timeDelta","currentFrameCompletion","floor","framesToCatchUp","newLastIdealStyle","newLastIdealVelocity","newCurrentStyle","newCurrentVelocity","newLastIdealStyleValue","newLastIdealVelocityValue","_stepper","_stepper2","nextIdealX","nextIdealV","defaultState","defaultStyle","objectOf","isRequired","componentDidMount","componentWillReceiveProps","componentWillUnmount","cancel","render","renderedChildren","Children","only","unreadPropStyles","currentStyles","currentVelocities","lastIdealStyles","lastIdealVelocities","someDirty","destStyles","styles","shouldStopAnimationAll","newLastIdealStyles","newLastIdealVelocities","newCurrentStyles","newCurrentVelocities","j","defaultStyles","arrayOf","map","_mergeDiff2","rehydrateStyles","mergedPropsStyles","plainStyles","cUnreadPropStyles","mergedPropsStyle","data","mergeAndSync","willEnter","willLeave","didLeave","oldMergedPropsStyles","oldCurrentStyles","oldCurrentVelocities","oldLastIdealStyles","oldLastIdealVelocities","newMergedPropsStyles","oldIndex","oldMergedPropsStyle","leavingStyle","newMergedPropsStyleCell","foundOldIndex","plainStyle","velocity","unmounting","_mergeAndSync","propStyles","_mergeAndSync2","newMergedPropsStyle","any","styleThatEntered","undefined","defaultStyleCell","_mergeAndSync3","hydratedStyles","prev","next","onRemove","prevKeyIndex","nextKeyIndex","fill","push","sort","a","nextOrderA","nextOrderB","prevOrderA","prevOrderB","pivot","defaultConfig","_presets2","r","__webpack_exports__","prop_types__WEBPACK_IMPORTED_MODULE_0__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","n","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","Hammer","window","privateProps","options","recognizeWith","vertical","handlerToEvent","action","onDoubleTap","onPanCancel","onPanEnd","onPanStart","onPinch","onPinchCancel","onPinchEnd","onPinchIn","onPinchOut","onPinchStart","onRotate","onRotateCancel","onRotateEnd","onRotateMove","onRotateStart","onSwipe","onSwipeRight","onSwipeLeft","onSwipeUp","onSwipeDown","updateHammer","hammer","console","warn","directionProp","get","set","keys","forEach","option","recognizers","gesture","recognizer","requireFailure","optionObj","p","off","on","HammerComponent","domElement","stop","destroy","ref","cloneElement","displayName","__WEBPACK_AMD_DEFINE_RESULT__","exportName","VENDOR_PREFIXES","TEST_ELEMENT","TYPE_FUNCTION","round","setTimeoutContext","fn","timeout","context","setTimeout","bindFn","invokeArrayArg","arg","isArray","each","iterator","deprecate","method","name","message","deprecationMessage","Error","stack","replace","log","output","index","nextKey","extend","dest","src","merge","inherit","child","base","properties","childP","baseP","_super","boolOrFn","ifUndefined","val1","val2","addEventListeners","types","handler","splitStr","type","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","parentNode","inStr","str","find","indexOf","trim","split","inArray","findByKey","toArray","slice","uniqueArray","results","values","prefixed","property","prefix","prop","camelProp","toUpperCase","_uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","navigator","userAgent","COMPUTE_INTERVAL","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_VERTICAL","DIRECTION_ALL","PROPS_XY","PROPS_CLIENT_XY","Input","manager","callback","inputTarget","domHandler","ev","enable","init","inputHandler","eventType","input","pointersLen","changedPointersLen","changedPointers","isFirst","session","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","deltaTime","angle","getAngle","distance","getDistance","offsetDelta","prevDelta","prevInput","y","deltaY","computeDeltaXY","offsetDirection","getDirection","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","scale","start","end","rotation","getRotation","maxPointers","velocityX","velocityY","last","lastInterval","computeIntervalInputData","srcEvent","computeInputData","emit","recognize","clientY","p1","p2","sqrt","atan2","PI","evEl","evTarget","evWin","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","MouseInput","pressed","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","PointerEventInput","store","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","SingleTouchInput","started","touches","all","changed","changedTouches","TOUCH_INPUT_MAP","TOUCH_TARGET_EVENTS","TouchInput","targetIds","allTouches","identifier","targetTouches","changedTargetTouches","filter","touch","DEDUP_TIMEOUT","DEDUP_DISTANCE","TouchMouseInput","mouse","primaryTouch","lastTouches","setLastTouch","eventData","lastTouch","lts","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","t","dx","dy","PREFIXED_TOUCH_ACTION","NATIVE_TOUCH_ACTION","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","getTouchActionProps","TouchAction","compute","actions","update","touchAction","getTouchAction","hasPanX","hasPanY","cleanTouchActions","join","preventDefaults","prevented","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","Recognizer","defaults","id","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","preset","Manager","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","event","additionalEvent","tryEmit","canEmit","inputDataClone","reset","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","inputClass","cssProps","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","handlers","oldCssProps","createInputInstance","toggleCssProps","item","add","force","stopped","curRecognizer","existing","remove","events","gestureEvent","createEvent","initEvent","dispatchEvent","triggerDomEvent","STATE_FAILED","Tap","Pan","Swipe","Pinch","Rotate","Press","_defineProperty","_transform","_overlay","left","opacity","overlayTransform","overflow","boxSizing","pointer","position","background","top"],"mappings":"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","file":"static/js/16.47fcecc1.chunk.js","sourcesContent":["// turn {x: {val: 1, stiffness: 1, damping: 2}, y: 2} generated by\n// `{x: spring(1, {stiffness: 1, damping: 2}), y: 2}` into {x: 1, y: 2}\n'use strict';\n\nexports.__esModule = true;\nexports['default'] = stripStyle;\n\nfunction stripStyle(style) {\n  var ret = {};\n\n  for (var key in style) {\n    if (!Object.prototype.hasOwnProperty.call(style, key)) {\n      continue;\n    }\n\n    ret[key] = typeof style[key] === 'number' ? style[key] : style[key].val;\n  }\n\n  return ret;\n}\n\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactMotion = require(\"react-motion\");\n\nvar _reactHammerjs = require(\"react-hammerjs\");\n\nvar _reactHammerjs2 = _interopRequireDefault(_reactHammerjs);\n\nvar _isFunction = require(\"1-liners/isFunction\");\n\nvar _isFunction2 = _interopRequireDefault(_isFunction);\n\nvar _styles2 = require(\"./styles\");\n\nvar _styles3 = _interopRequireDefault(_styles2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar bool = _propTypes2.default.bool,\n    number = _propTypes2.default.number,\n    array = _propTypes2.default.array,\n    object = _propTypes2.default.object,\n    string = _propTypes2.default.string,\n    func = _propTypes2.default.func,\n    oneOfType = _propTypes2.default.oneOfType;\n\nvar Drawer = function (_React$Component) {\n  _inherits(Drawer, _React$Component);\n\n  function Drawer() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Drawer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Drawer.__proto__ || Object.getPrototypeOf(Drawer)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      currentState: \"CLOSED\"\n    }, _this.isState = function (s) {\n      return s === _this.state.currentState;\n    }, _this.isClosed = function () {\n      return _this.isState(\"CLOSED\");\n    }, _this.isOpen = function () {\n      return _this.isState(\"OPEN\");\n    }, _this.isOpening = function () {\n      return _this.isState(\"IS_OPENING\");\n    }, _this.isClosing = function () {\n      return _this.isState(\"IS_CLOSING\");\n    }, _this.onPress = function (e) {\n      if (_this.props.noTouchOpen) return;\n      e.preventDefault();\n\n      _this.peak();\n    }, _this.onPressUp = function (e) {\n      if (_this.props.noTouchClose) return;\n      e.preventDefault();\n\n      _this.close();\n    }, _this.onPan = function (e) {\n      if (_this.isClosed() && _this.props.noTouchOpen) return;\n      if (_this.isOpen() && _this.props.noTouchClose) return;\n      e.preventDefault();\n      var isFinal = e.isFinal,\n          pointers = e.pointers,\n          direction = e.direction,\n          deltaX = e.deltaX;\n      if (_this.inPanTolerance(deltaX)) return;\n\n      if (isFinal) {\n        if (_this.isOpening()) _this.open();else if (_this.isClosing()) _this.close();\n        return;\n      }\n\n      var currentState = _this.state.currentState;\n      var _this$props = _this.props,\n          right = _this$props.right,\n          peakingWidth = _this$props.peakingWidth,\n          handleWidth = _this$props.handleWidth;\n\n      var width = _this.calculateWidth();\n\n      var clientX = pointers[0].clientX;\n      var x = right ? document.body.clientWidth - clientX : clientX;\n      if (x + peakingWidth >= width) x = width - peakingWidth;\n\n      var closingOrOpening = _this.closingOrOpening(direction);\n\n      var nextState = {\n        PEAK: closingOrOpening,\n        IS_OPENING: closingOrOpening,\n        IS_CLOSING: closingOrOpening,\n        OPEN: \"IS_CLOSING\",\n        CLOSED: \"PEAK\"\n      };\n\n      _this.setState({\n        currentState: nextState[currentState],\n        x: _this.isClosed() ? peakingWidth : peakingWidth / 2 + x\n      });\n    }, _this.onOverlayTap = function (e) {\n      e.preventDefault();\n      if (_this.isOpen()) _this.close();\n    }, _this.calculateWidth = function () {\n      var width = _this.props.width;\n      return /\\D/.test(width) ? document.body.clientWidth * (width.match(/\\d*/) / 100) : width;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Drawer, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var open = this.props.open;\n      var nextOpen = nextProps.open;\n\n      if (nextOpen !== open) {\n        if (nextOpen) this.open();else this.close();\n      }\n    }\n  }, {\n    key: \"peak\",\n    value: function peak() {\n      var _props = this.props,\n          onChange = _props.onChange,\n          handleWidth = _props.handleWidth;\n      onChange(false);\n      return this.setState({\n        currentState: \"PEAK\",\n        x: handleWidth\n      });\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.props.onChange(false);\n      return this.setState({\n        currentState: \"CLOSED\",\n        x: 0\n      });\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      var _props2 = this.props,\n          onChange = _props2.onChange,\n          width = _props2.width;\n      onChange(true);\n      return this.setState({\n        currentState: \"OPEN\",\n        x: this.calculateWidth()\n      });\n    }\n  }, {\n    key: \"isClosingDirection\",\n    value: function isClosingDirection(direction) {\n      var right = this.props.right;\n      var isClosing = direction === 2;\n      if (right) return !isClosing;else return isClosing;\n    }\n  }, {\n    key: \"closingOrOpening\",\n    value: function closingOrOpening(direction) {\n      return this.isClosingDirection(direction) ? \"IS_CLOSING\" : \"IS_OPENING\";\n    }\n  }, {\n    key: \"inPanTolerance\",\n    value: function inPanTolerance(deltaX) {\n      var currentState = this.state.currentState;\n      var panTolerance = this.props.panTolerance;\n      return Math.abs(deltaX) <= panTolerance && currentState === \"OPEN\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _props3 = this.props,\n          config = _props3.config,\n          drawerStyle = _props3.drawerStyle,\n          className = _props3.className,\n          overlayClassName = _props3.overlayClassName,\n          width = _props3.width,\n          children = _props3.children,\n          offset = _props3.offset;\n      var _state = this.state,\n          currentState = _state.currentState,\n          x = _state.x;\n      return _react2.default.createElement(_reactMotion.Motion, {\n        style: {\n          myProp: (0, _reactMotion.spring)(Math.min(x + offset || 0, this.calculateWidth()), config)\n        }\n      }, function (interpolated) {\n        var _styles = (0, _styles3.default)(interpolated.myProp, _this2.props),\n            drawer = _styles.drawer,\n            transform = _styles.transform,\n            overlay = _styles.overlay;\n\n        var computedStyle = _extends({}, drawer, drawerStyle);\n\n        if (interpolated.myProp > 0) computedStyle.display = \"block\";else computedStyle.display = \"none\";\n        return _react2.default.createElement(_reactHammerjs2.default, {\n          onPress: _this2.onPress,\n          onPressUp: _this2.onPressUp,\n          onPan: _this2.onPan,\n          direction: _reactHammerjs2.default.DIRECTION_HORIZONTAL\n        }, _react2.default.createElement(\"div\", {\n          style: transform\n        }, _react2.default.createElement(\"div\", {\n          className: className,\n          style: computedStyle\n        }, (0, _isFunction2.default)(children) ? children(interpolated.myProp) : children, !_this2.isClosed() && _react2.default.createElement(_reactHammerjs2.default, {\n          style: overlay,\n          className: overlayClassName,\n          onTap: _this2.onOverlayTap\n        }, _react2.default.createElement(\"span\", null)))));\n      });\n    }\n  }]);\n\n  return Drawer;\n}(_react2.default.Component);\n\nDrawer.propTypes = {\n  zIndex: number,\n  // z-index of the drawer default is 10000\n  noTouchOpen: bool,\n  // can a user pan to open\n  noTouchClose: bool,\n  // can a user pan to close\n  onChange: func,\n  // called when the drawer is open\n  drawerStyle: object,\n  // additional drawer styles\n  className: string,\n  // additional drawer className\n  overlayClassName: string,\n  // additional overlay className\n  config: _propTypes2.default.shape({\n    stiffness: number,\n    damping: number,\n    precision: number\n  }),\n  // configuration of the react-motion animation\n  open: bool,\n  // states if the drawer is open\n  width: oneOfType([number, string]),\n  // width of the drawer\n  height: oneOfType([number, string]),\n  // height of the drawer\n  handleWidth: number,\n  // width of the handle\n  peakingWidth: number,\n  // width that the drawer peaks on press\n  panTolerance: number,\n  // tolerance until the drawer starts to move\n  right: bool,\n  // drawer on the right side of the screen\n  overlayColor: string,\n  // color of the overlay\n  fadeOut: bool,\n  // fade out\n  offset: number // offset\n\n};\nDrawer.defaultProps = {\n  zIndex: 10000,\n  noTouchOpen: false,\n  noTouchClose: false,\n  onChange: function onChange() {},\n  overlayColor: \"rgba(0, 0, 0, 0.4)\",\n  config: {\n    stiffness: 350,\n    damping: 40\n  },\n  open: false,\n  width: 300,\n  height: \"100%\",\n  handleWidth: 20,\n  peakingWidth: 50,\n  panTolerance: 50,\n  right: false,\n  fadeOut: false,\n  offset: 0\n};\nexports.default = Drawer;","// currently used to initiate the velocity style object to 0\n'use strict';\n\nexports.__esModule = true;\nexports['default'] = mapToZero;\n\nfunction mapToZero(obj) {\n  var ret = {};\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      ret[key] = 0;\n    }\n  }\n\n  return ret;\n}\n\nmodule.exports = exports['default'];","// stepper is used a lot. Saves allocation to return the same array wrapper.\n// This is fine and danger-free against mutations because the callsite\n// immediately destructures it and gets the numbers inside without passing the\n\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = stepper;\nvar reusedTuple = [0, 0];\n\nfunction stepper(secondPerFrame, x, v, destX, k, b, precision) {\n  // Spring stiffness, in kg / s^2\n  // for animations, destX is really spring length (spring at rest). initial\n  // position is considered as the stretched/compressed position of a spring\n  var Fspring = -k * (x - destX); // Damping, in kg / s\n\n  var Fdamper = -b * v; // usually we put mass here, but for animation purposes, specifying mass is a\n  // bit redundant. you could simply adjust k and b accordingly\n  // let a = (Fspring + Fdamper) / mass;\n\n  var a = Fspring + Fdamper;\n  var newV = v + a * secondPerFrame;\n  var newX = x + newV * secondPerFrame;\n\n  if (Math.abs(newV) < precision && Math.abs(newX - destX) < precision) {\n    reusedTuple[0] = destX;\n    reusedTuple[1] = 0;\n    return reusedTuple;\n  }\n\n  reusedTuple[0] = newX;\n  reusedTuple[1] = newV;\n  return reusedTuple;\n}\n\nmodule.exports = exports[\"default\"]; // array reference around.","// Generated by CoffeeScript 1.7.1\n(function () {\n  var getNanoSeconds, hrtime, loadTime;\n\n  if (typeof performance !== \"undefined\" && performance !== null && performance.now) {\n    module.exports = function () {\n      return performance.now();\n    };\n  } else if (typeof process !== \"undefined\" && process !== null && process.hrtime) {\n    module.exports = function () {\n      return (getNanoSeconds() - loadTime) / 1e6;\n    };\n\n    hrtime = process.hrtime;\n\n    getNanoSeconds = function getNanoSeconds() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n\n    loadTime = getNanoSeconds();\n  } else if (Date.now) {\n    module.exports = function () {\n      return Date.now() - loadTime;\n    };\n\n    loadTime = Date.now();\n  } else {\n    module.exports = function () {\n      return new Date().getTime() - loadTime;\n    };\n\n    loadTime = new Date().getTime();\n  }\n}).call(this);","// usage assumption: currentStyle values have already been rendered but it says\n// nothing of whether currentStyle is stale (see unreadPropStyle)\n'use strict';\n\nexports.__esModule = true;\nexports['default'] = shouldStopAnimation;\n\nfunction shouldStopAnimation(currentStyle, style, currentVelocity) {\n  for (var key in style) {\n    if (!Object.prototype.hasOwnProperty.call(style, key)) {\n      continue;\n    }\n\n    if (currentVelocity[key] !== 0) {\n      return false;\n    }\n\n    var styleValue = typeof style[key] === 'number' ? style[key] : style[key].val; // stepper will have already taken care of rounding precision errors, so\n    // won't have such thing as 0.9999 !=== 1\n\n    if (currentStyle[key] !== styleValue) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = exports['default'];","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = {\n  noWobble: {\n    stiffness: 170,\n    damping: 26\n  },\n  // the default, if nothing provided\n  gentle: {\n    stiffness: 120,\n    damping: 14\n  },\n  wobbly: {\n    stiffness: 180,\n    damping: 12\n  },\n  stiff: {\n    stiffness: 210,\n    damping: 20\n  }\n};\nmodule.exports = exports[\"default\"];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequire(obj) {\n  return obj && obj.__esModule ? obj['default'] : obj;\n}\n\nvar _Motion = require('./Motion');\n\nexports.Motion = _interopRequire(_Motion);\n\nvar _StaggeredMotion = require('./StaggeredMotion');\n\nexports.StaggeredMotion = _interopRequire(_StaggeredMotion);\n\nvar _TransitionMotion = require('./TransitionMotion');\n\nexports.TransitionMotion = _interopRequire(_TransitionMotion);\n\nvar _spring = require('./spring');\n\nexports.spring = _interopRequire(_spring);\n\nvar _presets = require('./presets');\n\nexports.presets = _interopRequire(_presets);\n\nvar _stripStyle = require('./stripStyle');\n\nexports.stripStyle = _interopRequire(_stripStyle); // deprecated, dummy warning function\n\nvar _reorderKeys = require('./reorderKeys');\n\nexports.reorderKeys = _interopRequire(_reorderKeys);","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar _mapToZero = require('./mapToZero');\n\nvar _mapToZero2 = _interopRequireDefault(_mapToZero);\n\nvar _stripStyle = require('./stripStyle');\n\nvar _stripStyle2 = _interopRequireDefault(_stripStyle);\n\nvar _stepper3 = require('./stepper');\n\nvar _stepper4 = _interopRequireDefault(_stepper3);\n\nvar _performanceNow = require('performance-now');\n\nvar _performanceNow2 = _interopRequireDefault(_performanceNow);\n\nvar _raf = require('raf');\n\nvar _raf2 = _interopRequireDefault(_raf);\n\nvar _shouldStopAnimation = require('./shouldStopAnimation');\n\nvar _shouldStopAnimation2 = _interopRequireDefault(_shouldStopAnimation);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar msPerFrame = 1000 / 60;\n\nvar Motion = function (_React$Component) {\n  _inherits(Motion, _React$Component);\n\n  _createClass(Motion, null, [{\n    key: 'propTypes',\n    value: {\n      // TOOD: warn against putting a config in here\n      defaultStyle: _propTypes2['default'].objectOf(_propTypes2['default'].number),\n      style: _propTypes2['default'].objectOf(_propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].object])).isRequired,\n      children: _propTypes2['default'].func.isRequired,\n      onRest: _propTypes2['default'].func\n    },\n    enumerable: true\n  }]);\n\n  function Motion(props) {\n    var _this = this;\n\n    _classCallCheck(this, Motion);\n\n    _React$Component.call(this, props);\n\n    this.wasAnimating = false;\n    this.animationID = null;\n    this.prevTime = 0;\n    this.accumulatedTime = 0;\n    this.unreadPropStyle = null;\n\n    this.clearUnreadPropStyle = function (destStyle) {\n      var dirty = false;\n      var _state = _this.state;\n      var currentStyle = _state.currentStyle;\n      var currentVelocity = _state.currentVelocity;\n      var lastIdealStyle = _state.lastIdealStyle;\n      var lastIdealVelocity = _state.lastIdealVelocity;\n\n      for (var key in destStyle) {\n        if (!Object.prototype.hasOwnProperty.call(destStyle, key)) {\n          continue;\n        }\n\n        var styleValue = destStyle[key];\n\n        if (typeof styleValue === 'number') {\n          if (!dirty) {\n            dirty = true;\n            currentStyle = _extends({}, currentStyle);\n            currentVelocity = _extends({}, currentVelocity);\n            lastIdealStyle = _extends({}, lastIdealStyle);\n            lastIdealVelocity = _extends({}, lastIdealVelocity);\n          }\n\n          currentStyle[key] = styleValue;\n          currentVelocity[key] = 0;\n          lastIdealStyle[key] = styleValue;\n          lastIdealVelocity[key] = 0;\n        }\n      }\n\n      if (dirty) {\n        _this.setState({\n          currentStyle: currentStyle,\n          currentVelocity: currentVelocity,\n          lastIdealStyle: lastIdealStyle,\n          lastIdealVelocity: lastIdealVelocity\n        });\n      }\n    };\n\n    this.startAnimationIfNecessary = function () {\n      // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and\n      // call cb? No, otherwise accidental parent rerender causes cb trigger\n      _this.animationID = _raf2['default'](function (timestamp) {\n        // check if we need to animate in the first place\n        var propsStyle = _this.props.style;\n\n        if (_shouldStopAnimation2['default'](_this.state.currentStyle, propsStyle, _this.state.currentVelocity)) {\n          if (_this.wasAnimating && _this.props.onRest) {\n            _this.props.onRest();\n          } // no need to cancel animationID here; shouldn't have any in flight\n\n\n          _this.animationID = null;\n          _this.wasAnimating = false;\n          _this.accumulatedTime = 0;\n          return;\n        }\n\n        _this.wasAnimating = true;\n\n        var currentTime = timestamp || _performanceNow2['default']();\n\n        var timeDelta = currentTime - _this.prevTime;\n        _this.prevTime = currentTime;\n        _this.accumulatedTime = _this.accumulatedTime + timeDelta; // more than 10 frames? prolly switched browser tab. Restart\n\n        if (_this.accumulatedTime > msPerFrame * 10) {\n          _this.accumulatedTime = 0;\n        }\n\n        if (_this.accumulatedTime === 0) {\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n\n          _this.startAnimationIfNecessary();\n\n          return;\n        }\n\n        var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;\n        var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);\n        var newLastIdealStyle = {};\n        var newLastIdealVelocity = {};\n        var newCurrentStyle = {};\n        var newCurrentVelocity = {};\n\n        for (var key in propsStyle) {\n          if (!Object.prototype.hasOwnProperty.call(propsStyle, key)) {\n            continue;\n          }\n\n          var styleValue = propsStyle[key];\n\n          if (typeof styleValue === 'number') {\n            newCurrentStyle[key] = styleValue;\n            newCurrentVelocity[key] = 0;\n            newLastIdealStyle[key] = styleValue;\n            newLastIdealVelocity[key] = 0;\n          } else {\n            var newLastIdealStyleValue = _this.state.lastIdealStyle[key];\n            var newLastIdealVelocityValue = _this.state.lastIdealVelocity[key];\n\n            for (var i = 0; i < framesToCatchUp; i++) {\n              var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n              newLastIdealStyleValue = _stepper[0];\n              newLastIdealVelocityValue = _stepper[1];\n            }\n\n            var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n            var nextIdealX = _stepper2[0];\n            var nextIdealV = _stepper2[1];\n            newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;\n            newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;\n            newLastIdealStyle[key] = newLastIdealStyleValue;\n            newLastIdealVelocity[key] = newLastIdealVelocityValue;\n          }\n        }\n\n        _this.animationID = null; // the amount we're looped over above\n\n        _this.accumulatedTime -= framesToCatchUp * msPerFrame;\n\n        _this.setState({\n          currentStyle: newCurrentStyle,\n          currentVelocity: newCurrentVelocity,\n          lastIdealStyle: newLastIdealStyle,\n          lastIdealVelocity: newLastIdealVelocity\n        });\n\n        _this.unreadPropStyle = null;\n\n        _this.startAnimationIfNecessary();\n      });\n    };\n\n    this.state = this.defaultState();\n  }\n\n  Motion.prototype.defaultState = function defaultState() {\n    var _props = this.props;\n    var defaultStyle = _props.defaultStyle;\n    var style = _props.style;\n\n    var currentStyle = defaultStyle || _stripStyle2['default'](style);\n\n    var currentVelocity = _mapToZero2['default'](currentStyle);\n\n    return {\n      currentStyle: currentStyle,\n      currentVelocity: currentVelocity,\n      lastIdealStyle: currentStyle,\n      lastIdealVelocity: currentVelocity\n    };\n  }; // it's possible that currentStyle's value is stale: if props is immediately\n  // changed from 0 to 400 to spring(0) again, the async currentStyle is still\n  // at 0 (didn't have time to tick and interpolate even once). If we naively\n  // compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).\n  // In reality currentStyle should be 400\n\n\n  Motion.prototype.componentDidMount = function componentDidMount() {\n    this.prevTime = _performanceNow2['default']();\n    this.startAnimationIfNecessary();\n  };\n\n  Motion.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {\n    if (this.unreadPropStyle != null) {\n      // previous props haven't had the chance to be set yet; set them here\n      this.clearUnreadPropStyle(this.unreadPropStyle);\n    }\n\n    this.unreadPropStyle = props.style;\n\n    if (this.animationID == null) {\n      this.prevTime = _performanceNow2['default']();\n      this.startAnimationIfNecessary();\n    }\n  };\n\n  Motion.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.animationID != null) {\n      _raf2['default'].cancel(this.animationID);\n\n      this.animationID = null;\n    }\n  };\n\n  Motion.prototype.render = function render() {\n    var renderedChildren = this.props.children(this.state.currentStyle);\n    return renderedChildren && _react2['default'].Children.only(renderedChildren);\n  };\n\n  return Motion;\n}(_react2['default'].Component);\n\nexports['default'] = Motion;\nmodule.exports = exports['default']; // after checking for unreadPropStyle != null, we manually go set the\n// non-interpolating values (those that are a number, without a spring\n// config)","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar _mapToZero = require('./mapToZero');\n\nvar _mapToZero2 = _interopRequireDefault(_mapToZero);\n\nvar _stripStyle = require('./stripStyle');\n\nvar _stripStyle2 = _interopRequireDefault(_stripStyle);\n\nvar _stepper3 = require('./stepper');\n\nvar _stepper4 = _interopRequireDefault(_stepper3);\n\nvar _performanceNow = require('performance-now');\n\nvar _performanceNow2 = _interopRequireDefault(_performanceNow);\n\nvar _raf = require('raf');\n\nvar _raf2 = _interopRequireDefault(_raf);\n\nvar _shouldStopAnimation = require('./shouldStopAnimation');\n\nvar _shouldStopAnimation2 = _interopRequireDefault(_shouldStopAnimation);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar msPerFrame = 1000 / 60;\n\nfunction shouldStopAnimationAll(currentStyles, styles, currentVelocities) {\n  for (var i = 0; i < currentStyles.length; i++) {\n    if (!_shouldStopAnimation2['default'](currentStyles[i], styles[i], currentVelocities[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar StaggeredMotion = function (_React$Component) {\n  _inherits(StaggeredMotion, _React$Component);\n\n  _createClass(StaggeredMotion, null, [{\n    key: 'propTypes',\n    value: {\n      // TOOD: warn against putting a config in here\n      defaultStyles: _propTypes2['default'].arrayOf(_propTypes2['default'].objectOf(_propTypes2['default'].number)),\n      styles: _propTypes2['default'].func.isRequired,\n      children: _propTypes2['default'].func.isRequired\n    },\n    enumerable: true\n  }]);\n\n  function StaggeredMotion(props) {\n    var _this = this;\n\n    _classCallCheck(this, StaggeredMotion);\n\n    _React$Component.call(this, props);\n\n    this.animationID = null;\n    this.prevTime = 0;\n    this.accumulatedTime = 0;\n    this.unreadPropStyles = null;\n\n    this.clearUnreadPropStyle = function (unreadPropStyles) {\n      var _state = _this.state;\n      var currentStyles = _state.currentStyles;\n      var currentVelocities = _state.currentVelocities;\n      var lastIdealStyles = _state.lastIdealStyles;\n      var lastIdealVelocities = _state.lastIdealVelocities;\n      var someDirty = false;\n\n      for (var i = 0; i < unreadPropStyles.length; i++) {\n        var unreadPropStyle = unreadPropStyles[i];\n        var dirty = false;\n\n        for (var key in unreadPropStyle) {\n          if (!Object.prototype.hasOwnProperty.call(unreadPropStyle, key)) {\n            continue;\n          }\n\n          var styleValue = unreadPropStyle[key];\n\n          if (typeof styleValue === 'number') {\n            if (!dirty) {\n              dirty = true;\n              someDirty = true;\n              currentStyles[i] = _extends({}, currentStyles[i]);\n              currentVelocities[i] = _extends({}, currentVelocities[i]);\n              lastIdealStyles[i] = _extends({}, lastIdealStyles[i]);\n              lastIdealVelocities[i] = _extends({}, lastIdealVelocities[i]);\n            }\n\n            currentStyles[i][key] = styleValue;\n            currentVelocities[i][key] = 0;\n            lastIdealStyles[i][key] = styleValue;\n            lastIdealVelocities[i][key] = 0;\n          }\n        }\n      }\n\n      if (someDirty) {\n        _this.setState({\n          currentStyles: currentStyles,\n          currentVelocities: currentVelocities,\n          lastIdealStyles: lastIdealStyles,\n          lastIdealVelocities: lastIdealVelocities\n        });\n      }\n    };\n\n    this.startAnimationIfNecessary = function () {\n      // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and\n      // call cb? No, otherwise accidental parent rerender causes cb trigger\n      _this.animationID = _raf2['default'](function (timestamp) {\n        var destStyles = _this.props.styles(_this.state.lastIdealStyles); // check if we need to animate in the first place\n\n\n        if (shouldStopAnimationAll(_this.state.currentStyles, destStyles, _this.state.currentVelocities)) {\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.accumulatedTime = 0;\n          return;\n        }\n\n        var currentTime = timestamp || _performanceNow2['default']();\n\n        var timeDelta = currentTime - _this.prevTime;\n        _this.prevTime = currentTime;\n        _this.accumulatedTime = _this.accumulatedTime + timeDelta; // more than 10 frames? prolly switched browser tab. Restart\n\n        if (_this.accumulatedTime > msPerFrame * 10) {\n          _this.accumulatedTime = 0;\n        }\n\n        if (_this.accumulatedTime === 0) {\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n\n          _this.startAnimationIfNecessary();\n\n          return;\n        }\n\n        var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;\n        var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);\n        var newLastIdealStyles = [];\n        var newLastIdealVelocities = [];\n        var newCurrentStyles = [];\n        var newCurrentVelocities = [];\n\n        for (var i = 0; i < destStyles.length; i++) {\n          var destStyle = destStyles[i];\n          var newCurrentStyle = {};\n          var newCurrentVelocity = {};\n          var newLastIdealStyle = {};\n          var newLastIdealVelocity = {};\n\n          for (var key in destStyle) {\n            if (!Object.prototype.hasOwnProperty.call(destStyle, key)) {\n              continue;\n            }\n\n            var styleValue = destStyle[key];\n\n            if (typeof styleValue === 'number') {\n              newCurrentStyle[key] = styleValue;\n              newCurrentVelocity[key] = 0;\n              newLastIdealStyle[key] = styleValue;\n              newLastIdealVelocity[key] = 0;\n            } else {\n              var newLastIdealStyleValue = _this.state.lastIdealStyles[i][key];\n              var newLastIdealVelocityValue = _this.state.lastIdealVelocities[i][key];\n\n              for (var j = 0; j < framesToCatchUp; j++) {\n                var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n                newLastIdealStyleValue = _stepper[0];\n                newLastIdealVelocityValue = _stepper[1];\n              }\n\n              var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n              var nextIdealX = _stepper2[0];\n              var nextIdealV = _stepper2[1];\n              newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;\n              newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;\n              newLastIdealStyle[key] = newLastIdealStyleValue;\n              newLastIdealVelocity[key] = newLastIdealVelocityValue;\n            }\n          }\n\n          newCurrentStyles[i] = newCurrentStyle;\n          newCurrentVelocities[i] = newCurrentVelocity;\n          newLastIdealStyles[i] = newLastIdealStyle;\n          newLastIdealVelocities[i] = newLastIdealVelocity;\n        }\n\n        _this.animationID = null; // the amount we're looped over above\n\n        _this.accumulatedTime -= framesToCatchUp * msPerFrame;\n\n        _this.setState({\n          currentStyles: newCurrentStyles,\n          currentVelocities: newCurrentVelocities,\n          lastIdealStyles: newLastIdealStyles,\n          lastIdealVelocities: newLastIdealVelocities\n        });\n\n        _this.unreadPropStyles = null;\n\n        _this.startAnimationIfNecessary();\n      });\n    };\n\n    this.state = this.defaultState();\n  }\n\n  StaggeredMotion.prototype.defaultState = function defaultState() {\n    var _props = this.props;\n    var defaultStyles = _props.defaultStyles;\n    var styles = _props.styles;\n    var currentStyles = defaultStyles || styles().map(_stripStyle2['default']);\n    var currentVelocities = currentStyles.map(function (currentStyle) {\n      return _mapToZero2['default'](currentStyle);\n    });\n    return {\n      currentStyles: currentStyles,\n      currentVelocities: currentVelocities,\n      lastIdealStyles: currentStyles,\n      lastIdealVelocities: currentVelocities\n    };\n  };\n\n  StaggeredMotion.prototype.componentDidMount = function componentDidMount() {\n    this.prevTime = _performanceNow2['default']();\n    this.startAnimationIfNecessary();\n  };\n\n  StaggeredMotion.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {\n    if (this.unreadPropStyles != null) {\n      // previous props haven't had the chance to be set yet; set them here\n      this.clearUnreadPropStyle(this.unreadPropStyles);\n    }\n\n    this.unreadPropStyles = props.styles(this.state.lastIdealStyles);\n\n    if (this.animationID == null) {\n      this.prevTime = _performanceNow2['default']();\n      this.startAnimationIfNecessary();\n    }\n  };\n\n  StaggeredMotion.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.animationID != null) {\n      _raf2['default'].cancel(this.animationID);\n\n      this.animationID = null;\n    }\n  };\n\n  StaggeredMotion.prototype.render = function render() {\n    var renderedChildren = this.props.children(this.state.currentStyles);\n    return renderedChildren && _react2['default'].Children.only(renderedChildren);\n  };\n\n  return StaggeredMotion;\n}(_react2['default'].Component);\n\nexports['default'] = StaggeredMotion;\nmodule.exports = exports['default']; // it's possible that currentStyle's value is stale: if props is immediately\n// changed from 0 to 400 to spring(0) again, the async currentStyle is still\n// at 0 (didn't have time to tick and interpolate even once). If we naively\n// compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).\n// In reality currentStyle should be 400\n// after checking for unreadPropStyles != null, we manually go set the\n// non-interpolating values (those that are a number, without a spring\n// config)","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar _mapToZero = require('./mapToZero');\n\nvar _mapToZero2 = _interopRequireDefault(_mapToZero);\n\nvar _stripStyle = require('./stripStyle');\n\nvar _stripStyle2 = _interopRequireDefault(_stripStyle);\n\nvar _stepper3 = require('./stepper');\n\nvar _stepper4 = _interopRequireDefault(_stepper3);\n\nvar _mergeDiff = require('./mergeDiff');\n\nvar _mergeDiff2 = _interopRequireDefault(_mergeDiff);\n\nvar _performanceNow = require('performance-now');\n\nvar _performanceNow2 = _interopRequireDefault(_performanceNow);\n\nvar _raf = require('raf');\n\nvar _raf2 = _interopRequireDefault(_raf);\n\nvar _shouldStopAnimation = require('./shouldStopAnimation');\n\nvar _shouldStopAnimation2 = _interopRequireDefault(_shouldStopAnimation);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar msPerFrame = 1000 / 60; // the children function & (potential) styles function asks as param an\n// Array<TransitionPlainStyle>, where each TransitionPlainStyle is of the format\n// {key: string, data?: any, style: PlainStyle}. However, the way we keep\n// internal states doesn't contain such a data structure (check the state and\n// TransitionMotionState). So when children function and others ask for such\n// data we need to generate them on the fly by combining mergedPropsStyles and\n// currentStyles/lastIdealStyles\n\nfunction rehydrateStyles(mergedPropsStyles, unreadPropStyles, plainStyles) {\n  // Copy the value to a `const` so that Flow understands that the const won't\n  // change and will be non-nullable in the callback below.\n  var cUnreadPropStyles = unreadPropStyles;\n\n  if (cUnreadPropStyles == null) {\n    return mergedPropsStyles.map(function (mergedPropsStyle, i) {\n      return {\n        key: mergedPropsStyle.key,\n        data: mergedPropsStyle.data,\n        style: plainStyles[i]\n      };\n    });\n  }\n\n  return mergedPropsStyles.map(function (mergedPropsStyle, i) {\n    for (var j = 0; j < cUnreadPropStyles.length; j++) {\n      if (cUnreadPropStyles[j].key === mergedPropsStyle.key) {\n        return {\n          key: cUnreadPropStyles[j].key,\n          data: cUnreadPropStyles[j].data,\n          style: plainStyles[i]\n        };\n      }\n    }\n\n    return {\n      key: mergedPropsStyle.key,\n      data: mergedPropsStyle.data,\n      style: plainStyles[i]\n    };\n  });\n}\n\nfunction shouldStopAnimationAll(currentStyles, destStyles, currentVelocities, mergedPropsStyles) {\n  if (mergedPropsStyles.length !== destStyles.length) {\n    return false;\n  }\n\n  for (var i = 0; i < mergedPropsStyles.length; i++) {\n    if (mergedPropsStyles[i].key !== destStyles[i].key) {\n      return false;\n    }\n  } // we have the invariant that mergedPropsStyles and\n  // currentStyles/currentVelocities/last* are synced in terms of cells, see\n  // mergeAndSync comment for more info\n\n\n  for (var i = 0; i < mergedPropsStyles.length; i++) {\n    if (!_shouldStopAnimation2['default'](currentStyles[i], destStyles[i].style, currentVelocities[i])) {\n      return false;\n    }\n  }\n\n  return true;\n} // core key merging logic\n// things to do: say previously merged style is {a, b}, dest style (prop) is {b,\n// c}, previous current (interpolating) style is {a, b}\n// **invariant**: current[i] corresponds to merged[i] in terms of key\n// steps:\n// turn merged style into {a?, b, c}\n//    add c, value of c is destStyles.c\n//    maybe remove a, aka call willLeave(a), then merged is either {b, c} or {a, b, c}\n// turn current (interpolating) style from {a, b} into {a?, b, c}\n//    maybe remove a\n//    certainly add c, value of c is willEnter(c)\n// loop over merged and construct new current\n// dest doesn't change, that's owner's\n\n\nfunction mergeAndSync(willEnter, willLeave, didLeave, oldMergedPropsStyles, destStyles, oldCurrentStyles, oldCurrentVelocities, oldLastIdealStyles, oldLastIdealVelocities) {\n  var newMergedPropsStyles = _mergeDiff2['default'](oldMergedPropsStyles, destStyles, function (oldIndex, oldMergedPropsStyle) {\n    var leavingStyle = willLeave(oldMergedPropsStyle);\n\n    if (leavingStyle == null) {\n      didLeave({\n        key: oldMergedPropsStyle.key,\n        data: oldMergedPropsStyle.data\n      });\n      return null;\n    }\n\n    if (_shouldStopAnimation2['default'](oldCurrentStyles[oldIndex], leavingStyle, oldCurrentVelocities[oldIndex])) {\n      didLeave({\n        key: oldMergedPropsStyle.key,\n        data: oldMergedPropsStyle.data\n      });\n      return null;\n    }\n\n    return {\n      key: oldMergedPropsStyle.key,\n      data: oldMergedPropsStyle.data,\n      style: leavingStyle\n    };\n  });\n\n  var newCurrentStyles = [];\n  var newCurrentVelocities = [];\n  var newLastIdealStyles = [];\n  var newLastIdealVelocities = [];\n\n  for (var i = 0; i < newMergedPropsStyles.length; i++) {\n    var newMergedPropsStyleCell = newMergedPropsStyles[i];\n    var foundOldIndex = null;\n\n    for (var j = 0; j < oldMergedPropsStyles.length; j++) {\n      if (oldMergedPropsStyles[j].key === newMergedPropsStyleCell.key) {\n        foundOldIndex = j;\n        break;\n      }\n    } // TODO: key search code\n\n\n    if (foundOldIndex == null) {\n      var plainStyle = willEnter(newMergedPropsStyleCell);\n      newCurrentStyles[i] = plainStyle;\n      newLastIdealStyles[i] = plainStyle;\n\n      var velocity = _mapToZero2['default'](newMergedPropsStyleCell.style);\n\n      newCurrentVelocities[i] = velocity;\n      newLastIdealVelocities[i] = velocity;\n    } else {\n      newCurrentStyles[i] = oldCurrentStyles[foundOldIndex];\n      newLastIdealStyles[i] = oldLastIdealStyles[foundOldIndex];\n      newCurrentVelocities[i] = oldCurrentVelocities[foundOldIndex];\n      newLastIdealVelocities[i] = oldLastIdealVelocities[foundOldIndex];\n    }\n  }\n\n  return [newMergedPropsStyles, newCurrentStyles, newCurrentVelocities, newLastIdealStyles, newLastIdealVelocities];\n}\n\nvar TransitionMotion = function (_React$Component) {\n  _inherits(TransitionMotion, _React$Component);\n\n  _createClass(TransitionMotion, null, [{\n    key: 'propTypes',\n    value: {\n      defaultStyles: _propTypes2['default'].arrayOf(_propTypes2['default'].shape({\n        key: _propTypes2['default'].string.isRequired,\n        data: _propTypes2['default'].any,\n        style: _propTypes2['default'].objectOf(_propTypes2['default'].number).isRequired\n      })),\n      styles: _propTypes2['default'].oneOfType([_propTypes2['default'].func, _propTypes2['default'].arrayOf(_propTypes2['default'].shape({\n        key: _propTypes2['default'].string.isRequired,\n        data: _propTypes2['default'].any,\n        style: _propTypes2['default'].objectOf(_propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].object])).isRequired\n      }))]).isRequired,\n      children: _propTypes2['default'].func.isRequired,\n      willEnter: _propTypes2['default'].func,\n      willLeave: _propTypes2['default'].func,\n      didLeave: _propTypes2['default'].func\n    },\n    enumerable: true\n  }, {\n    key: 'defaultProps',\n    value: {\n      willEnter: function willEnter(styleThatEntered) {\n        return _stripStyle2['default'](styleThatEntered.style);\n      },\n      // recall: returning null makes the current unmounting TransitionStyle\n      // disappear immediately\n      willLeave: function willLeave() {\n        return null;\n      },\n      didLeave: function didLeave() {}\n    },\n    enumerable: true\n  }]);\n\n  function TransitionMotion(props) {\n    var _this = this;\n\n    _classCallCheck(this, TransitionMotion);\n\n    _React$Component.call(this, props);\n\n    this.unmounting = false;\n    this.animationID = null;\n    this.prevTime = 0;\n    this.accumulatedTime = 0;\n    this.unreadPropStyles = null;\n\n    this.clearUnreadPropStyle = function (unreadPropStyles) {\n      var _mergeAndSync = mergeAndSync(_this.props.willEnter, _this.props.willLeave, _this.props.didLeave, _this.state.mergedPropsStyles, unreadPropStyles, _this.state.currentStyles, _this.state.currentVelocities, _this.state.lastIdealStyles, _this.state.lastIdealVelocities);\n\n      var mergedPropsStyles = _mergeAndSync[0];\n      var currentStyles = _mergeAndSync[1];\n      var currentVelocities = _mergeAndSync[2];\n      var lastIdealStyles = _mergeAndSync[3];\n      var lastIdealVelocities = _mergeAndSync[4];\n\n      for (var i = 0; i < unreadPropStyles.length; i++) {\n        var unreadPropStyle = unreadPropStyles[i].style;\n        var dirty = false;\n\n        for (var key in unreadPropStyle) {\n          if (!Object.prototype.hasOwnProperty.call(unreadPropStyle, key)) {\n            continue;\n          }\n\n          var styleValue = unreadPropStyle[key];\n\n          if (typeof styleValue === 'number') {\n            if (!dirty) {\n              dirty = true;\n              currentStyles[i] = _extends({}, currentStyles[i]);\n              currentVelocities[i] = _extends({}, currentVelocities[i]);\n              lastIdealStyles[i] = _extends({}, lastIdealStyles[i]);\n              lastIdealVelocities[i] = _extends({}, lastIdealVelocities[i]);\n              mergedPropsStyles[i] = {\n                key: mergedPropsStyles[i].key,\n                data: mergedPropsStyles[i].data,\n                style: _extends({}, mergedPropsStyles[i].style)\n              };\n            }\n\n            currentStyles[i][key] = styleValue;\n            currentVelocities[i][key] = 0;\n            lastIdealStyles[i][key] = styleValue;\n            lastIdealVelocities[i][key] = 0;\n            mergedPropsStyles[i].style[key] = styleValue;\n          }\n        }\n      } // unlike the other 2 components, we can't detect staleness and optionally\n      // opt out of setState here. each style object's data might contain new\n      // stuff we're not/cannot compare\n\n\n      _this.setState({\n        currentStyles: currentStyles,\n        currentVelocities: currentVelocities,\n        mergedPropsStyles: mergedPropsStyles,\n        lastIdealStyles: lastIdealStyles,\n        lastIdealVelocities: lastIdealVelocities\n      });\n    };\n\n    this.startAnimationIfNecessary = function () {\n      if (_this.unmounting) {\n        return;\n      } // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and\n      // call cb? No, otherwise accidental parent rerender causes cb trigger\n\n\n      _this.animationID = _raf2['default'](function (timestamp) {\n        // https://github.com/chenglou/react-motion/pull/420\n        // > if execution passes the conditional if (this.unmounting), then\n        // executes async defaultRaf and after that component unmounts and after\n        // that the callback of defaultRaf is called, then setState will be called\n        // on unmounted component.\n        if (_this.unmounting) {\n          return;\n        }\n\n        var propStyles = _this.props.styles;\n        var destStyles = typeof propStyles === 'function' ? propStyles(rehydrateStyles(_this.state.mergedPropsStyles, _this.unreadPropStyles, _this.state.lastIdealStyles)) : propStyles; // check if we need to animate in the first place\n\n        if (shouldStopAnimationAll(_this.state.currentStyles, destStyles, _this.state.currentVelocities, _this.state.mergedPropsStyles)) {\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.accumulatedTime = 0;\n          return;\n        }\n\n        var currentTime = timestamp || _performanceNow2['default']();\n\n        var timeDelta = currentTime - _this.prevTime;\n        _this.prevTime = currentTime;\n        _this.accumulatedTime = _this.accumulatedTime + timeDelta; // more than 10 frames? prolly switched browser tab. Restart\n\n        if (_this.accumulatedTime > msPerFrame * 10) {\n          _this.accumulatedTime = 0;\n        }\n\n        if (_this.accumulatedTime === 0) {\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n\n          _this.startAnimationIfNecessary();\n\n          return;\n        }\n\n        var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;\n        var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);\n\n        var _mergeAndSync2 = mergeAndSync(_this.props.willEnter, _this.props.willLeave, _this.props.didLeave, _this.state.mergedPropsStyles, destStyles, _this.state.currentStyles, _this.state.currentVelocities, _this.state.lastIdealStyles, _this.state.lastIdealVelocities);\n\n        var newMergedPropsStyles = _mergeAndSync2[0];\n        var newCurrentStyles = _mergeAndSync2[1];\n        var newCurrentVelocities = _mergeAndSync2[2];\n        var newLastIdealStyles = _mergeAndSync2[3];\n        var newLastIdealVelocities = _mergeAndSync2[4];\n\n        for (var i = 0; i < newMergedPropsStyles.length; i++) {\n          var newMergedPropsStyle = newMergedPropsStyles[i].style;\n          var newCurrentStyle = {};\n          var newCurrentVelocity = {};\n          var newLastIdealStyle = {};\n          var newLastIdealVelocity = {};\n\n          for (var key in newMergedPropsStyle) {\n            if (!Object.prototype.hasOwnProperty.call(newMergedPropsStyle, key)) {\n              continue;\n            }\n\n            var styleValue = newMergedPropsStyle[key];\n\n            if (typeof styleValue === 'number') {\n              newCurrentStyle[key] = styleValue;\n              newCurrentVelocity[key] = 0;\n              newLastIdealStyle[key] = styleValue;\n              newLastIdealVelocity[key] = 0;\n            } else {\n              var newLastIdealStyleValue = newLastIdealStyles[i][key];\n              var newLastIdealVelocityValue = newLastIdealVelocities[i][key];\n\n              for (var j = 0; j < framesToCatchUp; j++) {\n                var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n                newLastIdealStyleValue = _stepper[0];\n                newLastIdealVelocityValue = _stepper[1];\n              }\n\n              var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n              var nextIdealX = _stepper2[0];\n              var nextIdealV = _stepper2[1];\n              newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;\n              newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;\n              newLastIdealStyle[key] = newLastIdealStyleValue;\n              newLastIdealVelocity[key] = newLastIdealVelocityValue;\n            }\n          }\n\n          newLastIdealStyles[i] = newLastIdealStyle;\n          newLastIdealVelocities[i] = newLastIdealVelocity;\n          newCurrentStyles[i] = newCurrentStyle;\n          newCurrentVelocities[i] = newCurrentVelocity;\n        }\n\n        _this.animationID = null; // the amount we're looped over above\n\n        _this.accumulatedTime -= framesToCatchUp * msPerFrame;\n\n        _this.setState({\n          currentStyles: newCurrentStyles,\n          currentVelocities: newCurrentVelocities,\n          lastIdealStyles: newLastIdealStyles,\n          lastIdealVelocities: newLastIdealVelocities,\n          mergedPropsStyles: newMergedPropsStyles\n        });\n\n        _this.unreadPropStyles = null;\n\n        _this.startAnimationIfNecessary();\n      });\n    };\n\n    this.state = this.defaultState();\n  }\n\n  TransitionMotion.prototype.defaultState = function defaultState() {\n    var _props = this.props;\n    var defaultStyles = _props.defaultStyles;\n    var styles = _props.styles;\n    var willEnter = _props.willEnter;\n    var willLeave = _props.willLeave;\n    var didLeave = _props.didLeave;\n    var destStyles = typeof styles === 'function' ? styles(defaultStyles) : styles; // this is special. for the first time around, we don't have a comparison\n    // between last (no last) and current merged props. we'll compute last so:\n    // say default is {a, b} and styles (dest style) is {b, c}, we'll\n    // fabricate last as {a, b}\n\n    var oldMergedPropsStyles = undefined;\n\n    if (defaultStyles == null) {\n      oldMergedPropsStyles = destStyles;\n    } else {\n      oldMergedPropsStyles = defaultStyles.map(function (defaultStyleCell) {\n        // TODO: key search code\n        for (var i = 0; i < destStyles.length; i++) {\n          if (destStyles[i].key === defaultStyleCell.key) {\n            return destStyles[i];\n          }\n        }\n\n        return defaultStyleCell;\n      });\n    }\n\n    var oldCurrentStyles = defaultStyles == null ? destStyles.map(function (s) {\n      return _stripStyle2['default'](s.style);\n    }) : defaultStyles.map(function (s) {\n      return _stripStyle2['default'](s.style);\n    });\n    var oldCurrentVelocities = defaultStyles == null ? destStyles.map(function (s) {\n      return _mapToZero2['default'](s.style);\n    }) : defaultStyles.map(function (s) {\n      return _mapToZero2['default'](s.style);\n    });\n\n    var _mergeAndSync3 = mergeAndSync( // Because this is an old-style createReactClass component, Flow doesn't\n    // understand that the willEnter and willLeave props have default values\n    // and will always be present.\n    willEnter, willLeave, didLeave, oldMergedPropsStyles, destStyles, oldCurrentStyles, oldCurrentVelocities, oldCurrentStyles, // oldLastIdealStyles really\n    oldCurrentVelocities);\n\n    var mergedPropsStyles = _mergeAndSync3[0];\n    var currentStyles = _mergeAndSync3[1];\n    var currentVelocities = _mergeAndSync3[2];\n    var lastIdealStyles = _mergeAndSync3[3];\n    var lastIdealVelocities = _mergeAndSync3[4]; // oldLastIdealVelocities really\n\n    return {\n      currentStyles: currentStyles,\n      currentVelocities: currentVelocities,\n      lastIdealStyles: lastIdealStyles,\n      lastIdealVelocities: lastIdealVelocities,\n      mergedPropsStyles: mergedPropsStyles\n    };\n  }; // after checking for unreadPropStyles != null, we manually go set the\n  // non-interpolating values (those that are a number, without a spring\n  // config)\n\n\n  TransitionMotion.prototype.componentDidMount = function componentDidMount() {\n    this.prevTime = _performanceNow2['default']();\n    this.startAnimationIfNecessary();\n  };\n\n  TransitionMotion.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {\n    if (this.unreadPropStyles) {\n      // previous props haven't had the chance to be set yet; set them here\n      this.clearUnreadPropStyle(this.unreadPropStyles);\n    }\n\n    var styles = props.styles;\n\n    if (typeof styles === 'function') {\n      this.unreadPropStyles = styles(rehydrateStyles(this.state.mergedPropsStyles, this.unreadPropStyles, this.state.lastIdealStyles));\n    } else {\n      this.unreadPropStyles = styles;\n    }\n\n    if (this.animationID == null) {\n      this.prevTime = _performanceNow2['default']();\n      this.startAnimationIfNecessary();\n    }\n  };\n\n  TransitionMotion.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.unmounting = true;\n\n    if (this.animationID != null) {\n      _raf2['default'].cancel(this.animationID);\n\n      this.animationID = null;\n    }\n  };\n\n  TransitionMotion.prototype.render = function render() {\n    var hydratedStyles = rehydrateStyles(this.state.mergedPropsStyles, this.unreadPropStyles, this.state.currentStyles);\n    var renderedChildren = this.props.children(hydratedStyles);\n    return renderedChildren && _react2['default'].Children.only(renderedChildren);\n  };\n\n  return TransitionMotion;\n}(_react2['default'].Component);\n\nexports['default'] = TransitionMotion;\nmodule.exports = exports['default']; // list of styles, each containing interpolating values. Part of what's passed\n// to children function. Notice that this is\n// Array<ActualInterpolatingStyleObject>, without the wrapper that is {key: ...,\n// data: ... style: ActualInterpolatingStyleObject}. Only mergedPropsStyles\n// contains the key & data info (so that we only have a single source of truth\n// for these, and to save space). Check the comment for `rehydrateStyles` to\n// see how we regenerate the entirety of what's passed to children function\n// the array that keeps track of currently rendered stuff! Including stuff\n// that you've unmounted but that's still animating. This is where it lives\n// it's possible that currentStyle's value is stale: if props is immediately\n// changed from 0 to 400 to spring(0) again, the async currentStyle is still\n// at 0 (didn't have time to tick and interpolate even once). If we naively\n// compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).\n// In reality currentStyle should be 400","// core keys merging algorithm. If previous render's keys are [a, b], and the\n// next render's [c, b, d], what's the final merged keys and ordering?\n// - c and a must both be before b\n// - b before d\n// - ordering between a and c ambiguous\n// this reduces to merging two partially ordered lists (e.g. lists where not\n// every item has a definite ordering, like comparing a and c above). For the\n// ambiguous ordering we deterministically choose to place the next render's\n// item after the previous'; so c after a\n// this is called a topological sorting. Except the existing algorithms don't\n// work well with js bc of the amount of allocation, and isn't optimized for our\n// current use-case bc the runtime is linear in terms of edges (see wiki for\n// meaning), which is huge when two lists have many common elements\n'use strict';\n\nexports.__esModule = true;\nexports['default'] = mergeDiff;\n\nfunction mergeDiff(prev, next, onRemove) {\n  // bookkeeping for easier access of a key's index below. This is 2 allocations +\n  // potentially triggering chrome hash map mode for objs (so it might be faster\n  var prevKeyIndex = {};\n\n  for (var i = 0; i < prev.length; i++) {\n    prevKeyIndex[prev[i].key] = i;\n  }\n\n  var nextKeyIndex = {};\n\n  for (var i = 0; i < next.length; i++) {\n    nextKeyIndex[next[i].key] = i;\n  } // first, an overly elaborate way of merging prev and next, eliminating\n  // duplicates (in terms of keys). If there's dupe, keep the item in next).\n  // This way of writing it saves allocations\n\n\n  var ret = [];\n\n  for (var i = 0; i < next.length; i++) {\n    ret[i] = next[i];\n  }\n\n  for (var i = 0; i < prev.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(nextKeyIndex, prev[i].key)) {\n      // this is called my TM's `mergeAndSync`, which calls willLeave. We don't\n      // merge in keys that the user desires to kill\n      var fill = onRemove(i, prev[i]);\n\n      if (fill != null) {\n        ret.push(fill);\n      }\n    }\n  } // now all the items all present. Core sorting logic to have the right order\n\n\n  return ret.sort(function (a, b) {\n    var nextOrderA = nextKeyIndex[a.key];\n    var nextOrderB = nextKeyIndex[b.key];\n    var prevOrderA = prevKeyIndex[a.key];\n    var prevOrderB = prevKeyIndex[b.key];\n\n    if (nextOrderA != null && nextOrderB != null) {\n      // both keys in next\n      return nextKeyIndex[a.key] - nextKeyIndex[b.key];\n    } else if (prevOrderA != null && prevOrderB != null) {\n      // both keys in prev\n      return prevKeyIndex[a.key] - prevKeyIndex[b.key];\n    } else if (nextOrderA != null) {\n      // key a in next, key b in prev\n      // how to determine the order between a and b? We find a \"pivot\" (term\n      // abuse), a key present in both prev and next, that is sandwiched between\n      // a and b. In the context of our above example, if we're comparing a and\n      // d, b's (the only) pivot\n      for (var i = 0; i < next.length; i++) {\n        var pivot = next[i].key;\n\n        if (!Object.prototype.hasOwnProperty.call(prevKeyIndex, pivot)) {\n          continue;\n        }\n\n        if (nextOrderA < nextKeyIndex[pivot] && prevOrderB > prevKeyIndex[pivot]) {\n          return -1;\n        } else if (nextOrderA > nextKeyIndex[pivot] && prevOrderB < prevKeyIndex[pivot]) {\n          return 1;\n        }\n      } // pluggable. default to: next bigger than prev\n\n\n      return 1;\n    } // prevOrderA, nextOrderB\n\n\n    for (var i = 0; i < next.length; i++) {\n      var pivot = next[i].key;\n\n      if (!Object.prototype.hasOwnProperty.call(prevKeyIndex, pivot)) {\n        continue;\n      }\n\n      if (nextOrderB < nextKeyIndex[pivot] && prevOrderA > prevKeyIndex[pivot]) {\n        return 1;\n      } else if (nextOrderB > nextKeyIndex[pivot] && prevOrderA < prevKeyIndex[pivot]) {\n        return -1;\n      }\n    } // pluggable. default to: next bigger than prev\n\n\n    return -1;\n  });\n}\n\nmodule.exports = exports['default']; // to loop through and find a key's index each time), but I no longer care","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports['default'] = spring;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _presets = require('./presets');\n\nvar _presets2 = _interopRequireDefault(_presets);\n\nvar defaultConfig = _extends({}, _presets2['default'].noWobble, {\n  precision: 0.01\n});\n\nfunction spring(val, config) {\n  return _extends({}, defaultConfig, config, {\n    val: val\n  });\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\nexports['default'] = reorderKeys;\nvar hasWarned = false;\n\nfunction reorderKeys() {\n  if (process.env.NODE_ENV === 'development') {\n    if (!hasWarned) {\n      hasWarned = true;\n      console.error('`reorderKeys` has been removed, since it is no longer needed for TransitionMotion\\'s new styles array API.');\n    }\n  }\n}\n\nmodule.exports = exports['default'];","import PropTypes from 'prop-types';\nimport React from 'react';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // require('hammerjs') when in a browser. This is safe because Hammer is only\n// invoked in componentDidMount, which is not executed on the server.\n\n\nvar Hammer = typeof window !== 'undefined' ? require('hammerjs') : undefined;\nvar privateProps = {\n  children: true,\n  direction: true,\n  options: true,\n  recognizeWith: true,\n  vertical: true\n};\n/**\n * Hammer Component\n * ================\n */\n\nvar handlerToEvent = {\n  action: 'tap press',\n  onDoubleTap: 'doubletap',\n  onPan: 'pan',\n  onPanCancel: 'pancancel',\n  onPanEnd: 'panend',\n  onPanStart: 'panstart',\n  onPinch: 'pinch',\n  onPinchCancel: 'pinchcancel',\n  onPinchEnd: 'pinchend',\n  onPinchIn: 'pinchin',\n  onPinchOut: 'pinchout',\n  onPinchStart: 'pinchstart',\n  onPress: 'press',\n  onPressUp: 'pressup',\n  onRotate: 'rotate',\n  onRotateCancel: 'rotatecancel',\n  onRotateEnd: 'rotateend',\n  onRotateMove: 'rotatemove',\n  onRotateStart: 'rotatestart',\n  onSwipe: 'swipe',\n  onSwipeRight: 'swiperight',\n  onSwipeLeft: 'swipeleft',\n  onSwipeUp: 'swipeup',\n  onSwipeDown: 'swipedown',\n  onTap: 'tap'\n};\nObject.keys(handlerToEvent).forEach(function (i) {\n  privateProps[i] = true;\n});\n\nfunction updateHammer(hammer, props) {\n  if (props.hasOwnProperty('vertical')) {\n    console.warn('vertical is deprecated, please use `direction` instead');\n  }\n\n  var directionProp = props.direction;\n\n  if (directionProp || props.hasOwnProperty('vertical')) {\n    var direction = directionProp ? directionProp : props.vertical ? 'DIRECTION_ALL' : 'DIRECTION_HORIZONTAL';\n    hammer.get('pan').set({\n      direction: Hammer[direction]\n    });\n    hammer.get('swipe').set({\n      direction: Hammer[direction]\n    });\n  }\n\n  if (props.options) {\n    Object.keys(props.options).forEach(function (option) {\n      if (option === 'recognizers') {\n        Object.keys(props.options.recognizers).forEach(function (gesture) {\n          var recognizer = hammer.get(gesture);\n          recognizer.set(props.options.recognizers[gesture]);\n\n          if (props.options.recognizers[gesture].requireFailure) {\n            recognizer.requireFailure(props.options.recognizers[gesture].requireFailure);\n          }\n        }, this);\n      } else {\n        var key = option;\n        var optionObj = {};\n        optionObj[key] = props.options[option];\n        hammer.set(optionObj);\n      }\n    }, this);\n  }\n\n  if (props.recognizeWith) {\n    Object.keys(props.recognizeWith).forEach(function (gesture) {\n      var recognizer = hammer.get(gesture);\n      recognizer.recognizeWith(props.recognizeWith[gesture]);\n    }, this);\n  }\n\n  Object.keys(props).forEach(function (p) {\n    var e = handlerToEvent[p];\n\n    if (e) {\n      hammer.off(e);\n      hammer.on(e, props[p]);\n    }\n  });\n}\n\nvar HammerComponent = function (_React$Component) {\n  _inherits(HammerComponent, _React$Component);\n\n  function HammerComponent() {\n    _classCallCheck(this, HammerComponent);\n\n    return _possibleConstructorReturn(this, (HammerComponent.__proto__ || Object.getPrototypeOf(HammerComponent)).apply(this, arguments));\n  }\n\n  _createClass(HammerComponent, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.hammer = new Hammer(this.domElement);\n      updateHammer(this.hammer, this.props);\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      if (this.hammer) {\n        updateHammer(this.hammer, this.props);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.hammer) {\n        this.hammer.stop();\n        this.hammer.destroy();\n      }\n\n      this.hammer = null;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var props = {};\n      Object.keys(this.props).forEach(function (i) {\n        if (!privateProps[i]) {\n          props[i] = this.props[i];\n        }\n      }, this);\n      var self = this;\n\n      props.ref = function (domElement) {\n        if (self.props.ref) {\n          self.props.ref(domElement);\n        }\n\n        self.domElement = domElement;\n      }; // Reuse the child provided\n      // This makes it flexible to use whatever element is wanted (div, ul, etc)\n\n\n      return React.cloneElement(React.Children.only(this.props.children), props);\n    }\n  }]);\n\n  return HammerComponent;\n}(React.Component);\n\nHammerComponent.displayName = 'Hammer';\nHammerComponent.propTypes = {\n  className: PropTypes.string\n};\nexport default HammerComponent;","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function (window, document, exportName, undefined) {\n  'use strict';\n\n  var VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\n  var TEST_ELEMENT = document.createElement('div');\n  var TYPE_FUNCTION = 'function';\n  var round = Math.round;\n  var abs = Math.abs;\n  var now = Date.now;\n  /**\n   * set a timeout with a given scope\n   * @param {Function} fn\n   * @param {Number} timeout\n   * @param {Object} context\n   * @returns {number}\n   */\n\n  function setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n  }\n  /**\n   * if the argument is an array, we want to execute the fn on each entry\n   * if it aint an array we don't want to do a thing.\n   * this is used by all the methods that accept a single and array argument.\n   * @param {*|Array} arg\n   * @param {String} fn\n   * @param {Object} [context]\n   * @returns {Boolean}\n   */\n\n\n  function invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n      each(arg, context[fn], context);\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * walk objects and arrays\n   * @param {Object} obj\n   * @param {Function} iterator\n   * @param {Object} context\n   */\n\n\n  function each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n      return;\n    }\n\n    if (obj.forEach) {\n      obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n      i = 0;\n\n      while (i < obj.length) {\n        iterator.call(context, obj[i], i, obj);\n        i++;\n      }\n    } else {\n      for (i in obj) {\n        obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n      }\n    }\n  }\n  /**\n   * wrap a method with a deprecation warning and stack trace\n   * @param {Function} method\n   * @param {String} name\n   * @param {String} message\n   * @returns {Function} A new function wrapping the supplied method.\n   */\n\n\n  function deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function () {\n      var e = new Error('get-stack-trace');\n      var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '').replace(/^\\s+at\\s+/gm, '').replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n      var log = window.console && (window.console.warn || window.console.log);\n\n      if (log) {\n        log.call(window.console, deprecationMessage, stack);\n      }\n\n      return method.apply(this, arguments);\n    };\n  }\n  /**\n   * extend object.\n   * means that properties in dest will be overwritten by the ones in src.\n   * @param {Object} target\n   * @param {...Object} objects_to_assign\n   * @returns {Object} target\n   */\n\n\n  var assign;\n\n  if (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n      if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      var output = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var source = arguments[index];\n\n        if (source !== undefined && source !== null) {\n          for (var nextKey in source) {\n            if (source.hasOwnProperty(nextKey)) {\n              output[nextKey] = source[nextKey];\n            }\n          }\n        }\n      }\n\n      return output;\n    };\n  } else {\n    assign = Object.assign;\n  }\n  /**\n   * extend object.\n   * means that properties in dest will be overwritten by the ones in src.\n   * @param {Object} dest\n   * @param {Object} src\n   * @param {Boolean} [merge=false]\n   * @returns {Object} dest\n   */\n\n\n  var extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n\n    while (i < keys.length) {\n      if (!merge || merge && dest[keys[i]] === undefined) {\n        dest[keys[i]] = src[keys[i]];\n      }\n\n      i++;\n    }\n\n    return dest;\n  }, 'extend', 'Use `assign`.');\n  /**\n   * merge the values from src in the dest.\n   * means that properties that exist in dest will not be overwritten by src\n   * @param {Object} dest\n   * @param {Object} src\n   * @returns {Object} dest\n   */\n\n  var merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n  }, 'merge', 'Use `assign`.');\n  /**\n   * simple class inheritance\n   * @param {Function} child\n   * @param {Function} base\n   * @param {Object} [properties]\n   */\n\n  function inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n      assign(childP, properties);\n    }\n  }\n  /**\n   * simple function bind\n   * @param {Function} fn\n   * @param {Object} context\n   * @returns {Function}\n   */\n\n\n  function bindFn(fn, context) {\n    return function boundFn() {\n      return fn.apply(context, arguments);\n    };\n  }\n  /**\n   * let a boolean value also be a function that must return a boolean\n   * this first item in args will be used as the context\n   * @param {Boolean|Function} val\n   * @param {Array} [args]\n   * @returns {Boolean}\n   */\n\n\n  function boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n      return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n\n    return val;\n  }\n  /**\n   * use the val2 when val1 is undefined\n   * @param {*} val1\n   * @param {*} val2\n   * @returns {*}\n   */\n\n\n  function ifUndefined(val1, val2) {\n    return val1 === undefined ? val2 : val1;\n  }\n  /**\n   * addEventListener with multiple events at once\n   * @param {EventTarget} target\n   * @param {String} types\n   * @param {Function} handler\n   */\n\n\n  function addEventListeners(target, types, handler) {\n    each(splitStr(types), function (type) {\n      target.addEventListener(type, handler, false);\n    });\n  }\n  /**\n   * removeEventListener with multiple events at once\n   * @param {EventTarget} target\n   * @param {String} types\n   * @param {Function} handler\n   */\n\n\n  function removeEventListeners(target, types, handler) {\n    each(splitStr(types), function (type) {\n      target.removeEventListener(type, handler, false);\n    });\n  }\n  /**\n   * find if a node is in the given parent\n   * @method hasParent\n   * @param {HTMLElement} node\n   * @param {HTMLElement} parent\n   * @return {Boolean} found\n   */\n\n\n  function hasParent(node, parent) {\n    while (node) {\n      if (node == parent) {\n        return true;\n      }\n\n      node = node.parentNode;\n    }\n\n    return false;\n  }\n  /**\n   * small indexOf wrapper\n   * @param {String} str\n   * @param {String} find\n   * @returns {Boolean} found\n   */\n\n\n  function inStr(str, find) {\n    return str.indexOf(find) > -1;\n  }\n  /**\n   * split string on whitespace\n   * @param {String} str\n   * @returns {Array} words\n   */\n\n\n  function splitStr(str) {\n    return str.trim().split(/\\s+/g);\n  }\n  /**\n   * find if a array contains the object using indexOf or a simple polyFill\n   * @param {Array} src\n   * @param {String} find\n   * @param {String} [findByKey]\n   * @return {Boolean|Number} false when not found, or the index\n   */\n\n\n  function inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n      return src.indexOf(find);\n    } else {\n      var i = 0;\n\n      while (i < src.length) {\n        if (findByKey && src[i][findByKey] == find || !findByKey && src[i] === find) {\n          return i;\n        }\n\n        i++;\n      }\n\n      return -1;\n    }\n  }\n  /**\n   * convert array-like objects to real arrays\n   * @param {Object} obj\n   * @returns {Array}\n   */\n\n\n  function toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n  }\n  /**\n   * unique array with objects based on a key (like 'id') or just by the array's value\n   * @param {Array} src [{id:1},{id:2},{id:1}]\n   * @param {String} [key]\n   * @param {Boolean} [sort=False]\n   * @returns {Array} [{id:1},{id:2}]\n   */\n\n\n  function uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n      var val = key ? src[i][key] : src[i];\n\n      if (inArray(values, val) < 0) {\n        results.push(src[i]);\n      }\n\n      values[i] = val;\n      i++;\n    }\n\n    if (sort) {\n      if (!key) {\n        results = results.sort();\n      } else {\n        results = results.sort(function sortUniqueArray(a, b) {\n          return a[key] > b[key];\n        });\n      }\n    }\n\n    return results;\n  }\n  /**\n   * get the prefixed property\n   * @param {Object} obj\n   * @param {String} property\n   * @returns {String|Undefined} prefixed\n   */\n\n\n  function prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n    var i = 0;\n\n    while (i < VENDOR_PREFIXES.length) {\n      prefix = VENDOR_PREFIXES[i];\n      prop = prefix ? prefix + camelProp : property;\n\n      if (prop in obj) {\n        return prop;\n      }\n\n      i++;\n    }\n\n    return undefined;\n  }\n  /**\n   * get a unique id\n   * @returns {number} uniqueId\n   */\n\n\n  var _uniqueId = 1;\n\n  function uniqueId() {\n    return _uniqueId++;\n  }\n  /**\n   * get the window object of an element\n   * @param {HTMLElement} element\n   * @returns {DocumentView|Window}\n   */\n\n\n  function getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return doc.defaultView || doc.parentWindow || window;\n  }\n\n  var MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n  var SUPPORT_TOUCH = 'ontouchstart' in window;\n  var SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\n  var SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n  var INPUT_TYPE_TOUCH = 'touch';\n  var INPUT_TYPE_PEN = 'pen';\n  var INPUT_TYPE_MOUSE = 'mouse';\n  var INPUT_TYPE_KINECT = 'kinect';\n  var COMPUTE_INTERVAL = 25;\n  var INPUT_START = 1;\n  var INPUT_MOVE = 2;\n  var INPUT_END = 4;\n  var INPUT_CANCEL = 8;\n  var DIRECTION_NONE = 1;\n  var DIRECTION_LEFT = 2;\n  var DIRECTION_RIGHT = 4;\n  var DIRECTION_UP = 8;\n  var DIRECTION_DOWN = 16;\n  var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\n  var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\n  var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n  var PROPS_XY = ['x', 'y'];\n  var PROPS_CLIENT_XY = ['clientX', 'clientY'];\n  /**\n   * create new input type manager\n   * @param {Manager} manager\n   * @param {Function} callback\n   * @returns {Input}\n   * @constructor\n   */\n\n  function Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget; // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n\n    this.domHandler = function (ev) {\n      if (boolOrFn(manager.options.enable, [manager])) {\n        self.handler(ev);\n      }\n    };\n\n    this.init();\n  }\n\n  Input.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function handler() {},\n\n    /**\n     * bind the events\n     */\n    init: function init() {\n      this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n      this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n      this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function destroy() {\n      this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n      this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n      this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n  };\n  /**\n   * create new input type manager\n   * called by the Manager constructor\n   * @param {Hammer} manager\n   * @returns {Input}\n   */\n\n  function createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n      Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n      Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n      Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n      Type = MouseInput;\n    } else {\n      Type = TouchMouseInput;\n    }\n\n    return new Type(manager, inputHandler);\n  }\n  /**\n   * handle input events\n   * @param {Manager} manager\n   * @param {String} eventType\n   * @param {Object} input\n   */\n\n\n  function inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = eventType & INPUT_START && pointersLen - changedPointersLen === 0;\n    var isFinal = eventType & (INPUT_END | INPUT_CANCEL) && pointersLen - changedPointersLen === 0;\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n      manager.session = {};\n    } // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n\n\n    input.eventType = eventType; // compute scale, rotation etc\n\n    computeInputData(manager, input); // emit secret event\n\n    manager.emit('hammer.input', input);\n    manager.recognize(input);\n    manager.session.prevInput = input;\n  }\n  /**\n   * extend the data with some usable properties like scale, rotate, velocity etc\n   * @param {Object} manager\n   * @param {Object} input\n   */\n\n\n  function computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length; // store the first input to calculate the distance and direction\n\n    if (!session.firstInput) {\n      session.firstInput = simpleCloneInputData(input);\n    } // to compute scale and rotation we need to store the multiple touches\n\n\n    if (pointersLength > 1 && !session.firstMultiple) {\n      session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n      session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = abs(overallVelocity.x) > abs(overallVelocity.y) ? overallVelocity.x : overallVelocity.y;\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n    input.maxPointers = !session.prevInput ? input.pointers.length : input.pointers.length > session.prevInput.maxPointers ? input.pointers.length : session.prevInput.maxPointers;\n    computeIntervalInputData(session, input); // find the correct target\n\n    var target = manager.element;\n\n    if (hasParent(input.srcEvent.target, target)) {\n      target = input.srcEvent.target;\n    }\n\n    input.target = target;\n  }\n\n  function computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n      prevDelta = session.prevDelta = {\n        x: prevInput.deltaX || 0,\n        y: prevInput.deltaY || 0\n      };\n      offset = session.offsetDelta = {\n        x: center.x,\n        y: center.y\n      };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n  }\n  /**\n   * velocity is calculated every x ms\n   * @param {Object} session\n   * @param {Object} input\n   */\n\n\n  function computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity,\n        velocityX,\n        velocityY,\n        direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n      var deltaX = input.deltaX - last.deltaX;\n      var deltaY = input.deltaY - last.deltaY;\n      var v = getVelocity(deltaTime, deltaX, deltaY);\n      velocityX = v.x;\n      velocityY = v.y;\n      velocity = abs(v.x) > abs(v.y) ? v.x : v.y;\n      direction = getDirection(deltaX, deltaY);\n      session.lastInterval = input;\n    } else {\n      // use latest velocity info if it doesn't overtake a minimum period\n      velocity = last.velocity;\n      velocityX = last.velocityX;\n      velocityY = last.velocityY;\n      direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n  }\n  /**\n   * create a simple clone from the input used for storage of firstInput and firstMultiple\n   * @param {Object} input\n   * @returns {Object} clonedInputData\n   */\n\n\n  function simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n\n    while (i < input.pointers.length) {\n      pointers[i] = {\n        clientX: round(input.pointers[i].clientX),\n        clientY: round(input.pointers[i].clientY)\n      };\n      i++;\n    }\n\n    return {\n      timeStamp: now(),\n      pointers: pointers,\n      center: getCenter(pointers),\n      deltaX: input.deltaX,\n      deltaY: input.deltaY\n    };\n  }\n  /**\n   * get the center of all the pointers\n   * @param {Array} pointers\n   * @return {Object} center contains `x` and `y` properties\n   */\n\n\n  function getCenter(pointers) {\n    var pointersLength = pointers.length; // no need to loop when only one touch\n\n    if (pointersLength === 1) {\n      return {\n        x: round(pointers[0].clientX),\n        y: round(pointers[0].clientY)\n      };\n    }\n\n    var x = 0,\n        y = 0,\n        i = 0;\n\n    while (i < pointersLength) {\n      x += pointers[i].clientX;\n      y += pointers[i].clientY;\n      i++;\n    }\n\n    return {\n      x: round(x / pointersLength),\n      y: round(y / pointersLength)\n    };\n  }\n  /**\n   * calculate the velocity between two points. unit is in px per ms.\n   * @param {Number} deltaTime\n   * @param {Number} x\n   * @param {Number} y\n   * @return {Object} velocity `x` and `y`\n   */\n\n\n  function getVelocity(deltaTime, x, y) {\n    return {\n      x: x / deltaTime || 0,\n      y: y / deltaTime || 0\n    };\n  }\n  /**\n   * get the direction between two points\n   * @param {Number} x\n   * @param {Number} y\n   * @return {Number} direction\n   */\n\n\n  function getDirection(x, y) {\n    if (x === y) {\n      return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n      return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n  }\n  /**\n   * calculate the absolute distance between two points\n   * @param {Object} p1 {x, y}\n   * @param {Object} p2 {x, y}\n   * @param {Array} [props] containing x and y keys\n   * @return {Number} distance\n   */\n\n\n  function getDistance(p1, p2, props) {\n    if (!props) {\n      props = PROPS_XY;\n    }\n\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.sqrt(x * x + y * y);\n  }\n  /**\n   * calculate the angle between two coordinates\n   * @param {Object} p1\n   * @param {Object} p2\n   * @param {Array} [props] containing x and y keys\n   * @return {Number} angle\n   */\n\n\n  function getAngle(p1, p2, props) {\n    if (!props) {\n      props = PROPS_XY;\n    }\n\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n  }\n  /**\n   * calculate the rotation degrees between two pointersets\n   * @param {Array} start array of pointers\n   * @param {Array} end array of pointers\n   * @return {Number} rotation\n   */\n\n\n  function getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n  }\n  /**\n   * calculate the scale factor between two pointersets\n   * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n   * @param {Array} start array of pointers\n   * @param {Array} end array of pointers\n   * @return {Number} scale\n   */\n\n\n  function getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n  }\n\n  var MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n  };\n  var MOUSE_ELEMENT_EVENTS = 'mousedown';\n  var MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n  /**\n   * Mouse events input\n   * @constructor\n   * @extends Input\n   */\n\n  function MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n  }\n\n  inherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n      var eventType = MOUSE_INPUT_MAP[ev.type]; // on start we want to have the left mouse button down\n\n      if (eventType & INPUT_START && ev.button === 0) {\n        this.pressed = true;\n      }\n\n      if (eventType & INPUT_MOVE && ev.which !== 1) {\n        eventType = INPUT_END;\n      } // mouse must be down\n\n\n      if (!this.pressed) {\n        return;\n      }\n\n      if (eventType & INPUT_END) {\n        this.pressed = false;\n      }\n\n      this.callback(this.manager, eventType, {\n        pointers: [ev],\n        changedPointers: [ev],\n        pointerType: INPUT_TYPE_MOUSE,\n        srcEvent: ev\n      });\n    }\n  });\n  var POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n  }; // in IE10 the pointer types is defined as an enum\n\n  var IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n\n  };\n  var POINTER_ELEMENT_EVENTS = 'pointerdown';\n  var POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel'; // IE10 has prefixed support, and case-sensitive\n\n  if (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n  }\n  /**\n   * Pointer events input\n   * @constructor\n   * @extends Input\n   */\n\n\n  function PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n    Input.apply(this, arguments);\n    this.store = this.manager.session.pointerEvents = [];\n  }\n\n  inherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n      var store = this.store;\n      var removePointer = false;\n      var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n      var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n      var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n      var isTouch = pointerType == INPUT_TYPE_TOUCH; // get index of the event in the store\n\n      var storeIndex = inArray(store, ev.pointerId, 'pointerId'); // start and mouse must be down\n\n      if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n        if (storeIndex < 0) {\n          store.push(ev);\n          storeIndex = store.length - 1;\n        }\n      } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        removePointer = true;\n      } // it not found, so the pointer hasn't been down (so it's probably a hover)\n\n\n      if (storeIndex < 0) {\n        return;\n      } // update the event in the store\n\n\n      store[storeIndex] = ev;\n      this.callback(this.manager, eventType, {\n        pointers: store,\n        changedPointers: [ev],\n        pointerType: pointerType,\n        srcEvent: ev\n      });\n\n      if (removePointer) {\n        // remove from the store\n        store.splice(storeIndex, 1);\n      }\n    }\n  });\n  var SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n  };\n  var SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\n  var SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n  /**\n   * Touch events input\n   * @constructor\n   * @extends Input\n   */\n\n  function SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n    Input.apply(this, arguments);\n  }\n\n  inherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n      var type = SINGLE_TOUCH_INPUT_MAP[ev.type]; // should we handle the touch events?\n\n      if (type === INPUT_START) {\n        this.started = true;\n      }\n\n      if (!this.started) {\n        return;\n      }\n\n      var touches = normalizeSingleTouches.call(this, ev, type); // when done, reset the started state\n\n      if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n        this.started = false;\n      }\n\n      this.callback(this.manager, type, {\n        pointers: touches[0],\n        changedPointers: touches[1],\n        pointerType: INPUT_TYPE_TOUCH,\n        srcEvent: ev\n      });\n    }\n  });\n  /**\n   * @this {TouchInput}\n   * @param {Object} ev\n   * @param {Number} type flag\n   * @returns {undefined|Array} [all, changed]\n   */\n\n  function normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n      all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n  }\n\n  var TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n  };\n  var TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n  /**\n   * Multi-user touch events input\n   * @constructor\n   * @extends Input\n   */\n\n  function TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n    Input.apply(this, arguments);\n  }\n\n  inherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n      var type = TOUCH_INPUT_MAP[ev.type];\n      var touches = getTouches.call(this, ev, type);\n\n      if (!touches) {\n        return;\n      }\n\n      this.callback(this.manager, type, {\n        pointers: touches[0],\n        changedPointers: touches[1],\n        pointerType: INPUT_TYPE_TOUCH,\n        srcEvent: ev\n      });\n    }\n  });\n  /**\n   * @this {TouchInput}\n   * @param {Object} ev\n   * @param {Number} type flag\n   * @returns {undefined|Array} [all, changed]\n   */\n\n  function getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds; // when there is only one touch, the process can be simplified\n\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n      targetIds[allTouches[0].identifier] = true;\n      return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target; // get target touches from touches\n\n    targetTouches = allTouches.filter(function (touch) {\n      return hasParent(touch.target, target);\n    }); // collect touches\n\n    if (type === INPUT_START) {\n      i = 0;\n\n      while (i < targetTouches.length) {\n        targetIds[targetTouches[i].identifier] = true;\n        i++;\n      }\n    } // filter changed touches to only contain touches that exist in the collected target ids\n\n\n    i = 0;\n\n    while (i < changedTouches.length) {\n      if (targetIds[changedTouches[i].identifier]) {\n        changedTargetTouches.push(changedTouches[i]);\n      } // cleanup removed touches\n\n\n      if (type & (INPUT_END | INPUT_CANCEL)) {\n        delete targetIds[changedTouches[i].identifier];\n      }\n\n      i++;\n    }\n\n    if (!changedTargetTouches.length) {\n      return;\n    }\n\n    return [// merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n    uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true), changedTargetTouches];\n  }\n  /**\n   * Combined touch and mouse input\n   *\n   * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n   * This because touch devices also emit mouse events while doing a touch.\n   *\n   * @constructor\n   * @extends Input\n   */\n\n\n  var DEDUP_TIMEOUT = 2500;\n  var DEDUP_DISTANCE = 25;\n\n  function TouchMouseInput() {\n    Input.apply(this, arguments);\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n    this.primaryTouch = null;\n    this.lastTouches = [];\n  }\n\n  inherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n      var isTouch = inputData.pointerType == INPUT_TYPE_TOUCH,\n          isMouse = inputData.pointerType == INPUT_TYPE_MOUSE;\n\n      if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n        return;\n      } // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n\n\n      if (isTouch) {\n        recordTouches.call(this, inputEvent, inputData);\n      } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n        return;\n      }\n\n      this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n      this.touch.destroy();\n      this.mouse.destroy();\n    }\n  });\n\n  function recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n      this.primaryTouch = eventData.changedPointers[0].identifier;\n      setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n      setLastTouch.call(this, eventData);\n    }\n  }\n\n  function setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n      var lastTouch = {\n        x: touch.clientX,\n        y: touch.clientY\n      };\n      this.lastTouches.push(lastTouch);\n      var lts = this.lastTouches;\n\n      var removeLastTouch = function removeLastTouch() {\n        var i = lts.indexOf(lastTouch);\n\n        if (i > -1) {\n          lts.splice(i, 1);\n        }\n      };\n\n      setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n  }\n\n  function isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX,\n        y = eventData.srcEvent.clientY;\n\n    for (var i = 0; i < this.lastTouches.length; i++) {\n      var t = this.lastTouches[i];\n      var dx = Math.abs(x - t.x),\n          dy = Math.abs(y - t.y);\n\n      if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  var PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\n  var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined; // magical touchAction value\n\n  var TOUCH_ACTION_COMPUTE = 'compute';\n  var TOUCH_ACTION_AUTO = 'auto';\n  var TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\n\n  var TOUCH_ACTION_NONE = 'none';\n  var TOUCH_ACTION_PAN_X = 'pan-x';\n  var TOUCH_ACTION_PAN_Y = 'pan-y';\n  var TOUCH_ACTION_MAP = getTouchActionProps();\n  /**\n   * Touch Action\n   * sets the touchAction property or uses the js alternative\n   * @param {Manager} manager\n   * @param {String} value\n   * @constructor\n   */\n\n  function TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n  }\n\n  TouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function set(value) {\n      // find out the touch-action by the event handlers\n      if (value == TOUCH_ACTION_COMPUTE) {\n        value = this.compute();\n      }\n\n      if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n        this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n      }\n\n      this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function update() {\n      this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function compute() {\n      var actions = [];\n      each(this.manager.recognizers, function (recognizer) {\n        if (boolOrFn(recognizer.options.enable, [recognizer])) {\n          actions = actions.concat(recognizer.getTouchAction());\n        }\n      });\n      return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function preventDefaults(input) {\n      var srcEvent = input.srcEvent;\n      var direction = input.offsetDirection; // if the touch action did prevented once this session\n\n      if (this.manager.session.prevented) {\n        srcEvent.preventDefault();\n        return;\n      }\n\n      var actions = this.actions;\n      var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n      var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n      var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n      if (hasNone) {\n        //do not prevent defaults if this is a tap gesture\n        var isTapPointer = input.pointers.length === 1;\n        var isTapMovement = input.distance < 2;\n        var isTapTouchTime = input.deltaTime < 250;\n\n        if (isTapPointer && isTapMovement && isTapTouchTime) {\n          return;\n        }\n      }\n\n      if (hasPanX && hasPanY) {\n        // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n        return;\n      }\n\n      if (hasNone || hasPanY && direction & DIRECTION_HORIZONTAL || hasPanX && direction & DIRECTION_VERTICAL) {\n        return this.preventSrc(srcEvent);\n      }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function preventSrc(srcEvent) {\n      this.manager.session.prevented = true;\n      srcEvent.preventDefault();\n    }\n  };\n  /**\n   * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n   * @param {String} actions\n   * @returns {*}\n   */\n\n  function cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n      return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y); // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n\n    if (hasPanX && hasPanY) {\n      return TOUCH_ACTION_NONE;\n    } // pan-x OR pan-y\n\n\n    if (hasPanX || hasPanY) {\n      return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    } // manipulation\n\n\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n      return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n  }\n\n  function getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n      return false;\n    }\n\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function (val) {\n      // If css.supports is not supported but there is native touch-action assume it supports\n      // all values. This is the case for IE 10 and 11.\n      touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n  }\n  /**\n   * Recognizer flow explained; *\n   * All recognizers have the initial state of POSSIBLE when a input session starts.\n   * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n   * Example session for mouse-input: mousedown -> mousemove -> mouseup\n   *\n   * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n   * which determines with state it should be.\n   *\n   * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n   * POSSIBLE to give it another change on the next cycle.\n   *\n   *               Possible\n   *                  |\n   *            +-----+---------------+\n   *            |                     |\n   *      +-----+-----+               |\n   *      |           |               |\n   *   Failed      Cancelled          |\n   *                          +-------+------+\n   *                          |              |\n   *                      Recognized       Began\n   *                                         |\n   *                                      Changed\n   *                                         |\n   *                                  Ended/Recognized\n   */\n\n\n  var STATE_POSSIBLE = 1;\n  var STATE_BEGAN = 2;\n  var STATE_CHANGED = 4;\n  var STATE_ENDED = 8;\n  var STATE_RECOGNIZED = STATE_ENDED;\n  var STATE_CANCELLED = 16;\n  var STATE_FAILED = 32;\n  /**\n   * Recognizer\n   * Every recognizer needs to extend from this class.\n   * @constructor\n   * @param {Object} options\n   */\n\n  function Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n    this.id = uniqueId();\n    this.manager = null; // default is enable true\n\n    this.options.enable = ifUndefined(this.options.enable, true);\n    this.state = STATE_POSSIBLE;\n    this.simultaneous = {};\n    this.requireFail = [];\n  }\n\n  Recognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function set(options) {\n      assign(this.options, options); // also update the touchAction, in case something changed about the directions/enabled state\n\n      this.manager && this.manager.touchAction.update();\n      return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function recognizeWith(otherRecognizer) {\n      if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n        return this;\n      }\n\n      var simultaneous = this.simultaneous;\n      otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\n      if (!simultaneous[otherRecognizer.id]) {\n        simultaneous[otherRecognizer.id] = otherRecognizer;\n        otherRecognizer.recognizeWith(this);\n      }\n\n      return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function dropRecognizeWith(otherRecognizer) {\n      if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n        return this;\n      }\n\n      otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n      delete this.simultaneous[otherRecognizer.id];\n      return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function requireFailure(otherRecognizer) {\n      if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n        return this;\n      }\n\n      var requireFail = this.requireFail;\n      otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\n      if (inArray(requireFail, otherRecognizer) === -1) {\n        requireFail.push(otherRecognizer);\n        otherRecognizer.requireFailure(this);\n      }\n\n      return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function dropRequireFailure(otherRecognizer) {\n      if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n        return this;\n      }\n\n      otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n      var index = inArray(this.requireFail, otherRecognizer);\n\n      if (index > -1) {\n        this.requireFail.splice(index, 1);\n      }\n\n      return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function hasRequireFailures() {\n      return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function canRecognizeWith(otherRecognizer) {\n      return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function emit(input) {\n      var self = this;\n      var state = this.state;\n\n      function emit(event) {\n        self.manager.emit(event, input);\n      } // 'panstart' and 'panmove'\n\n\n      if (state < STATE_ENDED) {\n        emit(self.options.event + stateStr(state));\n      }\n\n      emit(self.options.event); // simple 'eventName' events\n\n      if (input.additionalEvent) {\n        // additional event(panleft, panright, pinchin, pinchout...)\n        emit(input.additionalEvent);\n      } // panend and pancancel\n\n\n      if (state >= STATE_ENDED) {\n        emit(self.options.event + stateStr(state));\n      }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function tryEmit(input) {\n      if (this.canEmit()) {\n        return this.emit(input);\n      } // it's failing anyway\n\n\n      this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function canEmit() {\n      var i = 0;\n\n      while (i < this.requireFail.length) {\n        if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n          return false;\n        }\n\n        i++;\n      }\n\n      return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function recognize(inputData) {\n      // make a new copy of the inputData\n      // so we can change the inputData without messing up the other recognizers\n      var inputDataClone = assign({}, inputData); // is is enabled and allow recognizing?\n\n      if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n        this.reset();\n        this.state = STATE_FAILED;\n        return;\n      } // reset when we've reached the end\n\n\n      if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n        this.state = STATE_POSSIBLE;\n      }\n\n      this.state = this.process(inputDataClone); // the recognizer has recognized a gesture\n      // so trigger an event\n\n      if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n        this.tryEmit(inputDataClone);\n      }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function process(inputData) {},\n    // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function getTouchAction() {},\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function reset() {}\n  };\n  /**\n   * get a usable string, used as event postfix\n   * @param {Const} state\n   * @returns {String} state\n   */\n\n  function stateStr(state) {\n    if (state & STATE_CANCELLED) {\n      return 'cancel';\n    } else if (state & STATE_ENDED) {\n      return 'end';\n    } else if (state & STATE_CHANGED) {\n      return 'move';\n    } else if (state & STATE_BEGAN) {\n      return 'start';\n    }\n\n    return '';\n  }\n  /**\n   * direction cons to string\n   * @param {Const} direction\n   * @returns {String}\n   */\n\n\n  function directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n      return 'down';\n    } else if (direction == DIRECTION_UP) {\n      return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n      return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n      return 'right';\n    }\n\n    return '';\n  }\n  /**\n   * get a recognizer by name if it is bound to a manager\n   * @param {Recognizer|String} otherRecognizer\n   * @param {Recognizer} recognizer\n   * @returns {Recognizer}\n   */\n\n\n  function getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n\n    if (manager) {\n      return manager.get(otherRecognizer);\n    }\n\n    return otherRecognizer;\n  }\n  /**\n   * This recognizer is just used as a base for the simple attribute recognizers.\n   * @constructor\n   * @extends Recognizer\n   */\n\n\n  function AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n  }\n\n  inherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n      /**\n       * @type {Number}\n       * @default 1\n       */\n      pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function attrTest(input) {\n      var optionPointers = this.options.pointers;\n      return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function process(input) {\n      var state = this.state;\n      var eventType = input.eventType;\n      var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n      var isValid = this.attrTest(input); // on cancel input and we've recognized before, return STATE_CANCELLED\n\n      if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n        return state | STATE_CANCELLED;\n      } else if (isRecognized || isValid) {\n        if (eventType & INPUT_END) {\n          return state | STATE_ENDED;\n        } else if (!(state & STATE_BEGAN)) {\n          return STATE_BEGAN;\n        }\n\n        return state | STATE_CHANGED;\n      }\n\n      return STATE_FAILED;\n    }\n  });\n  /**\n   * Pan\n   * Recognized when the pointer is down and moved in the allowed direction.\n   * @constructor\n   * @extends AttrRecognizer\n   */\n\n  function PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n    this.pX = null;\n    this.pY = null;\n  }\n\n  inherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n      event: 'pan',\n      threshold: 10,\n      pointers: 1,\n      direction: DIRECTION_ALL\n    },\n    getTouchAction: function getTouchAction() {\n      var direction = this.options.direction;\n      var actions = [];\n\n      if (direction & DIRECTION_HORIZONTAL) {\n        actions.push(TOUCH_ACTION_PAN_Y);\n      }\n\n      if (direction & DIRECTION_VERTICAL) {\n        actions.push(TOUCH_ACTION_PAN_X);\n      }\n\n      return actions;\n    },\n    directionTest: function directionTest(input) {\n      var options = this.options;\n      var hasMoved = true;\n      var distance = input.distance;\n      var direction = input.direction;\n      var x = input.deltaX;\n      var y = input.deltaY; // lock to axis?\n\n      if (!(direction & options.direction)) {\n        if (options.direction & DIRECTION_HORIZONTAL) {\n          direction = x === 0 ? DIRECTION_NONE : x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n          hasMoved = x != this.pX;\n          distance = Math.abs(input.deltaX);\n        } else {\n          direction = y === 0 ? DIRECTION_NONE : y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n          hasMoved = y != this.pY;\n          distance = Math.abs(input.deltaY);\n        }\n      }\n\n      input.direction = direction;\n      return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n    attrTest: function attrTest(input) {\n      return AttrRecognizer.prototype.attrTest.call(this, input) && (this.state & STATE_BEGAN || !(this.state & STATE_BEGAN) && this.directionTest(input));\n    },\n    emit: function emit(input) {\n      this.pX = input.deltaX;\n      this.pY = input.deltaY;\n      var direction = directionStr(input.direction);\n\n      if (direction) {\n        input.additionalEvent = this.options.event + direction;\n      }\n\n      this._super.emit.call(this, input);\n    }\n  });\n  /**\n   * Pinch\n   * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n   * @constructor\n   * @extends AttrRecognizer\n   */\n\n  function PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n  }\n\n  inherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n      event: 'pinch',\n      threshold: 0,\n      pointers: 2\n    },\n    getTouchAction: function getTouchAction() {\n      return [TOUCH_ACTION_NONE];\n    },\n    attrTest: function attrTest(input) {\n      return this._super.attrTest.call(this, input) && (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n    emit: function emit(input) {\n      if (input.scale !== 1) {\n        var inOut = input.scale < 1 ? 'in' : 'out';\n        input.additionalEvent = this.options.event + inOut;\n      }\n\n      this._super.emit.call(this, input);\n    }\n  });\n  /**\n   * Press\n   * Recognized when the pointer is down for x ms without any movement.\n   * @constructor\n   * @extends Recognizer\n   */\n\n  function PressRecognizer() {\n    Recognizer.apply(this, arguments);\n    this._timer = null;\n    this._input = null;\n  }\n\n  inherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n      event: 'press',\n      pointers: 1,\n      time: 251,\n      // minimal time of the pointer to be pressed\n      threshold: 9 // a minimal movement is ok, but keep it low\n\n    },\n    getTouchAction: function getTouchAction() {\n      return [TOUCH_ACTION_AUTO];\n    },\n    process: function process(input) {\n      var options = this.options;\n      var validPointers = input.pointers.length === options.pointers;\n      var validMovement = input.distance < options.threshold;\n      var validTime = input.deltaTime > options.time;\n      this._input = input; // we only allow little movement\n      // and we've reached an end event, so a tap is possible\n\n      if (!validMovement || !validPointers || input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime) {\n        this.reset();\n      } else if (input.eventType & INPUT_START) {\n        this.reset();\n        this._timer = setTimeoutContext(function () {\n          this.state = STATE_RECOGNIZED;\n          this.tryEmit();\n        }, options.time, this);\n      } else if (input.eventType & INPUT_END) {\n        return STATE_RECOGNIZED;\n      }\n\n      return STATE_FAILED;\n    },\n    reset: function reset() {\n      clearTimeout(this._timer);\n    },\n    emit: function emit(input) {\n      if (this.state !== STATE_RECOGNIZED) {\n        return;\n      }\n\n      if (input && input.eventType & INPUT_END) {\n        this.manager.emit(this.options.event + 'up', input);\n      } else {\n        this._input.timeStamp = now();\n        this.manager.emit(this.options.event, this._input);\n      }\n    }\n  });\n  /**\n   * Rotate\n   * Recognized when two or more pointer are moving in a circular motion.\n   * @constructor\n   * @extends AttrRecognizer\n   */\n\n  function RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n  }\n\n  inherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n      event: 'rotate',\n      threshold: 0,\n      pointers: 2\n    },\n    getTouchAction: function getTouchAction() {\n      return [TOUCH_ACTION_NONE];\n    },\n    attrTest: function attrTest(input) {\n      return this._super.attrTest.call(this, input) && (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n  });\n  /**\n   * Swipe\n   * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n   * @constructor\n   * @extends AttrRecognizer\n   */\n\n  function SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n  }\n\n  inherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n      event: 'swipe',\n      threshold: 10,\n      velocity: 0.3,\n      direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n      pointers: 1\n    },\n    getTouchAction: function getTouchAction() {\n      return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n    attrTest: function attrTest(input) {\n      var direction = this.options.direction;\n      var velocity;\n\n      if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n        velocity = input.overallVelocity;\n      } else if (direction & DIRECTION_HORIZONTAL) {\n        velocity = input.overallVelocityX;\n      } else if (direction & DIRECTION_VERTICAL) {\n        velocity = input.overallVelocityY;\n      }\n\n      return this._super.attrTest.call(this, input) && direction & input.offsetDirection && input.distance > this.options.threshold && input.maxPointers == this.options.pointers && abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n    emit: function emit(input) {\n      var direction = directionStr(input.offsetDirection);\n\n      if (direction) {\n        this.manager.emit(this.options.event + direction, input);\n      }\n\n      this.manager.emit(this.options.event, input);\n    }\n  });\n  /**\n   * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n   * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n   * a single tap.\n   *\n   * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n   * multi-taps being recognized.\n   * @constructor\n   * @extends Recognizer\n   */\n\n  function TapRecognizer() {\n    Recognizer.apply(this, arguments); // previous time and center,\n    // used for tap counting\n\n    this.pTime = false;\n    this.pCenter = false;\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n  }\n\n  inherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n      event: 'tap',\n      pointers: 1,\n      taps: 1,\n      interval: 300,\n      // max time between the multi-tap taps\n      time: 250,\n      // max time of the pointer to be down (like finger on the screen)\n      threshold: 9,\n      // a minimal movement is ok, but keep it low\n      posThreshold: 10 // a multi-tap can be a bit off the initial position\n\n    },\n    getTouchAction: function getTouchAction() {\n      return [TOUCH_ACTION_MANIPULATION];\n    },\n    process: function process(input) {\n      var options = this.options;\n      var validPointers = input.pointers.length === options.pointers;\n      var validMovement = input.distance < options.threshold;\n      var validTouchTime = input.deltaTime < options.time;\n      this.reset();\n\n      if (input.eventType & INPUT_START && this.count === 0) {\n        return this.failTimeout();\n      } // we only allow little movement\n      // and we've reached an end event, so a tap is possible\n\n\n      if (validMovement && validTouchTime && validPointers) {\n        if (input.eventType != INPUT_END) {\n          return this.failTimeout();\n        }\n\n        var validInterval = this.pTime ? input.timeStamp - this.pTime < options.interval : true;\n        var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n        this.pTime = input.timeStamp;\n        this.pCenter = input.center;\n\n        if (!validMultiTap || !validInterval) {\n          this.count = 1;\n        } else {\n          this.count += 1;\n        }\n\n        this._input = input; // if tap count matches we have recognized it,\n        // else it has began recognizing...\n\n        var tapCount = this.count % options.taps;\n\n        if (tapCount === 0) {\n          // no failing requirements, immediately trigger the tap event\n          // or wait as long as the multitap interval to trigger\n          if (!this.hasRequireFailures()) {\n            return STATE_RECOGNIZED;\n          } else {\n            this._timer = setTimeoutContext(function () {\n              this.state = STATE_RECOGNIZED;\n              this.tryEmit();\n            }, options.interval, this);\n            return STATE_BEGAN;\n          }\n        }\n      }\n\n      return STATE_FAILED;\n    },\n    failTimeout: function failTimeout() {\n      this._timer = setTimeoutContext(function () {\n        this.state = STATE_FAILED;\n      }, this.options.interval, this);\n      return STATE_FAILED;\n    },\n    reset: function reset() {\n      clearTimeout(this._timer);\n    },\n    emit: function emit() {\n      if (this.state == STATE_RECOGNIZED) {\n        this._input.tapCount = this.count;\n        this.manager.emit(this.options.event, this._input);\n      }\n    }\n  });\n  /**\n   * Simple way to create a manager with a default set of recognizers.\n   * @param {HTMLElement} element\n   * @param {Object} [options]\n   * @constructor\n   */\n\n  function Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n  }\n  /**\n   * @const {string}\n   */\n\n\n  Hammer.VERSION = '2.0.7';\n  /**\n   * default settings\n   * @namespace\n   */\n\n  Hammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [// RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n    [RotateRecognizer, {\n      enable: false\n    }], [PinchRecognizer, {\n      enable: false\n    }, ['rotate']], [SwipeRecognizer, {\n      direction: DIRECTION_HORIZONTAL\n    }], [PanRecognizer, {\n      direction: DIRECTION_HORIZONTAL\n    }, ['swipe']], [TapRecognizer], [TapRecognizer, {\n      event: 'doubletap',\n      taps: 2\n    }, ['tap']], [PressRecognizer]],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n      /**\n       * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n       * @type {String}\n       * @default 'none'\n       */\n      userSelect: 'none',\n\n      /**\n       * Disable the Windows Phone grippers when pressing an element.\n       * @type {String}\n       * @default 'none'\n       */\n      touchSelect: 'none',\n\n      /**\n       * Disables the default callout shown when you touch and hold a touch target.\n       * On iOS, when you touch and hold a touch target such as a link, Safari displays\n       * a callout containing information about the link. This property allows you to disable that callout.\n       * @type {String}\n       * @default 'none'\n       */\n      touchCallout: 'none',\n\n      /**\n       * Specifies whether zooming is enabled. Used by IE10>\n       * @type {String}\n       * @default 'none'\n       */\n      contentZooming: 'none',\n\n      /**\n       * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n       * @type {String}\n       * @default 'none'\n       */\n      userDrag: 'none',\n\n      /**\n       * Overrides the highlight color shown when the user taps a link or a JavaScript\n       * clickable element in iOS. This property obeys the alpha value, if specified.\n       * @type {String}\n       * @default 'rgba(0,0,0,0)'\n       */\n      tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n  };\n  var STOP = 1;\n  var FORCED_STOP = 2;\n  /**\n   * Manager\n   * @param {HTMLElement} element\n   * @param {Object} [options]\n   * @constructor\n   */\n\n  function Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n    this.options.inputTarget = this.options.inputTarget || element;\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n    toggleCssProps(this, true);\n    each(this.options.recognizers, function (item) {\n      var recognizer = this.add(new item[0](item[1]));\n      item[2] && recognizer.recognizeWith(item[2]);\n      item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n  }\n\n  Manager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function set(options) {\n      assign(this.options, options); // Options that need a little more setup\n\n      if (options.touchAction) {\n        this.touchAction.update();\n      }\n\n      if (options.inputTarget) {\n        // Clean up existing event listeners and reinitialize\n        this.input.destroy();\n        this.input.target = options.inputTarget;\n        this.input.init();\n      }\n\n      return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function stop(force) {\n      this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function recognize(inputData) {\n      var session = this.session;\n\n      if (session.stopped) {\n        return;\n      } // run the touch-action polyfill\n\n\n      this.touchAction.preventDefaults(inputData);\n      var recognizer;\n      var recognizers = this.recognizers; // this holds the recognizer that is being recognized.\n      // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n      // if no recognizer is detecting a thing, it is set to `null`\n\n      var curRecognizer = session.curRecognizer; // reset when the last recognizer is recognized\n      // or when we're in a new session\n\n      if (!curRecognizer || curRecognizer && curRecognizer.state & STATE_RECOGNIZED) {\n        curRecognizer = session.curRecognizer = null;\n      }\n\n      var i = 0;\n\n      while (i < recognizers.length) {\n        recognizer = recognizers[i]; // find out if we are allowed try to recognize the input for this one.\n        // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n        // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n        //      that is being recognized.\n        // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n        //      this can be setup with the `recognizeWith()` method on the recognizer.\n\n        if (session.stopped !== FORCED_STOP && ( // 1\n        !curRecognizer || recognizer == curRecognizer || // 2\n        recognizer.canRecognizeWith(curRecognizer))) {\n          // 3\n          recognizer.recognize(inputData);\n        } else {\n          recognizer.reset();\n        } // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n        // current active recognizer. but only if we don't already have an active recognizer\n\n\n        if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n          curRecognizer = session.curRecognizer = recognizer;\n        }\n\n        i++;\n      }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function get(recognizer) {\n      if (recognizer instanceof Recognizer) {\n        return recognizer;\n      }\n\n      var recognizers = this.recognizers;\n\n      for (var i = 0; i < recognizers.length; i++) {\n        if (recognizers[i].options.event == recognizer) {\n          return recognizers[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function add(recognizer) {\n      if (invokeArrayArg(recognizer, 'add', this)) {\n        return this;\n      } // remove existing\n\n\n      var existing = this.get(recognizer.options.event);\n\n      if (existing) {\n        this.remove(existing);\n      }\n\n      this.recognizers.push(recognizer);\n      recognizer.manager = this;\n      this.touchAction.update();\n      return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function remove(recognizer) {\n      if (invokeArrayArg(recognizer, 'remove', this)) {\n        return this;\n      }\n\n      recognizer = this.get(recognizer); // let's make sure this recognizer exists\n\n      if (recognizer) {\n        var recognizers = this.recognizers;\n        var index = inArray(recognizers, recognizer);\n\n        if (index !== -1) {\n          recognizers.splice(index, 1);\n          this.touchAction.update();\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function on(events, handler) {\n      if (events === undefined) {\n        return;\n      }\n\n      if (handler === undefined) {\n        return;\n      }\n\n      var handlers = this.handlers;\n      each(splitStr(events), function (event) {\n        handlers[event] = handlers[event] || [];\n        handlers[event].push(handler);\n      });\n      return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function off(events, handler) {\n      if (events === undefined) {\n        return;\n      }\n\n      var handlers = this.handlers;\n      each(splitStr(events), function (event) {\n        if (!handler) {\n          delete handlers[event];\n        } else {\n          handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n        }\n      });\n      return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function emit(event, data) {\n      // we also want to trigger dom events\n      if (this.options.domEvents) {\n        triggerDomEvent(event, data);\n      } // no handlers, so skip it all\n\n\n      var handlers = this.handlers[event] && this.handlers[event].slice();\n\n      if (!handlers || !handlers.length) {\n        return;\n      }\n\n      data.type = event;\n\n      data.preventDefault = function () {\n        data.srcEvent.preventDefault();\n      };\n\n      var i = 0;\n\n      while (i < handlers.length) {\n        handlers[i](data);\n        i++;\n      }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function destroy() {\n      this.element && toggleCssProps(this, false);\n      this.handlers = {};\n      this.session = {};\n      this.input.destroy();\n      this.element = null;\n    }\n  };\n  /**\n   * add/remove the css properties as defined in manager.options.cssProps\n   * @param {Manager} manager\n   * @param {Boolean} add\n   */\n\n  function toggleCssProps(manager, add) {\n    var element = manager.element;\n\n    if (!element.style) {\n      return;\n    }\n\n    var prop;\n    each(manager.options.cssProps, function (value, name) {\n      prop = prefixed(element.style, name);\n\n      if (add) {\n        manager.oldCssProps[prop] = element.style[prop];\n        element.style[prop] = value;\n      } else {\n        element.style[prop] = manager.oldCssProps[prop] || '';\n      }\n    });\n\n    if (!add) {\n      manager.oldCssProps = {};\n    }\n  }\n  /**\n   * trigger dom event\n   * @param {String} event\n   * @param {Object} data\n   */\n\n\n  function triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n  }\n\n  assign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n  }); // this prevents errors when Hammer is loaded in the presence of an AMD\n  //  style loader but by script tag, not by the loader.\n\n  var freeGlobal = typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}; // jshint ignore:line\n\n  freeGlobal.Hammer = Hammer;\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return Hammer;\n    });\n  } else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n  } else {\n    window[exportName] = Hammer;\n  }\n})(window, document, 'Hammer');","/**\n * @module 1-liners/isFunction\n *\n * @description\n *\n * Same as `typeof value === 'function'`.\n *\n * @example\n *\n * \tconst isFunction = require('1-liners/isFunction');\n *\n * \tisFunction(function() {});        // => true\n * \tisFunction(function named() {});  // => true\n *\n * \tisFunction('any other value');    // => false\n *\n */\n'use strict';\n\nexports.__esModule = true;\n\nexports['default'] = function (value) {\n  return typeof value === 'function';\n};\n\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (val, props) {\n  var _transform, _overlay;\n\n  var zIndex = props.zIndex,\n      left = props.left,\n      right = props.right,\n      height = props.height,\n      handleWidth = props.handleWidth,\n      overlayColor = props.overlayColor,\n      fadeOut = props.fadeOut,\n      offset = props.offset;\n  var clientWidth = 1000;\n  var width = props.width;\n\n  if (typeof document !== \"undefined\") {\n    clientWidth = document.body.clientWidth;\n    if (/\\D/.test(width)) width = document.body.clientWidth * (width.match(/\\d*/) / 100);\n  }\n\n  var opacity = (val - offset) / width;\n  if (right) val = width - val;else val = val - width;\n  var drawer = {\n    display: \"block\",\n    width: width,\n    height: height,\n    overflow: \"auto\"\n  };\n  var transform = (_transform = {\n    boxSizing: \"content-box\",\n    pointer: \"cursor\",\n    position: \"fixed\",\n    display: \"block\",\n    zIndex: zIndex,\n    width: width\n  }, _defineProperty(_transform, right ? \"paddingLeft\" : \"paddingRight\", handleWidth), _defineProperty(_transform, \"maxWidth\", width), _defineProperty(_transform, \"height\", height), _defineProperty(_transform, \"top\", 0), _defineProperty(_transform, right ? \"right\" : \"left\", 0), _defineProperty(_transform, \"margin\", 0), _defineProperty(_transform, \"transform\", \"translate3d(\" + val + \"px, 0, 0)\"), _defineProperty(_transform, \"WebkitTransform\", \"translate3d(\" + val + \"px, 0, 0)\"), _defineProperty(_transform, \"opacity\", fadeOut ? opacity : 1), _transform);\n  var overlayTransform = right ? -width : width;\n  var overlay = (_overlay = {\n    zIndex: -2,\n    pointer: \"cursor\",\n    position: \"fixed\",\n    width: clientWidth,\n    height: \"100%\",\n    background: overlayColor,\n    opacity: opacity,\n    top: 0\n  }, _defineProperty(_overlay, right ? \"right\" : \"left\", 0), _defineProperty(_overlay, \"margin\", 0), _defineProperty(_overlay, \"transform\", \"translate3d(\" + overlayTransform + \"px, 0, 0)\"), _defineProperty(_overlay, \"WebkitTransform\", \"translate3d(\" + overlayTransform + \"px, 0, 0)\"), _overlay);\n  return {\n    drawer: drawer,\n    transform: transform,\n    overlay: overlay\n  };\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}"],"sourceRoot":""}